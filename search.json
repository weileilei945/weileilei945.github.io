[{"title":"2020面试总结","url":"http://weileilei.top/2020面试总结/","content":"<p>2020年前后经过长期的面试，碰了不少壁。开始没有准备，然后开始一边准备一边面试。虽然最后拿到了offer，但是通过这件事认清了自己缺乏总结。<br>于是先从最近的面试题做一个总结，后面会慢慢去做框架解读的总结。</p>\n<h2 id=\"CSS部分\"><a href=\"#CSS部分\" class=\"headerlink\" title=\"CSS部分\"></a>CSS部分</h2>","categories":[],"tags":["前端"]},{"title":"做了两期活动的总结","url":"http://weileilei.top/做了两期活动的总结/","content":"<p>最近两个月在疯狂的赶项目，运营活动和用户权益中心催的都比较紧，刚刚腾出手，总结一下最近项目中遇到的问题</p>\n<h2 id=\"移动端DOM生成图片\"><a href=\"#移动端DOM生成图片\" class=\"headerlink\" title=\"移动端DOM生成图片\"></a>移动端DOM生成图片</h2><p>818活动时，要求用户生成自己自定义的卡片，卡片上有用户自己的二维码，需要动态的把DOM转化成图片并且可以让用户在浏览器中保存生成的图片。<br>首先我先从网上查资料，大部分用的是html2canvas和dom-to-img，html2canva有自己的官网，于是就决定用html2canva来才保存图片的坑。<br>开始写demo，生成简单的图文字混排，在qq浏览器（移动端）发现没什么毛病，但是提示图片有跨域问题（后期的坑），于是没有管先做项目，在项目中再解决这个坑。下面总结一下使用html2canvas需要注意的点。</p>\n<h3 id=\"图片区域的生成\"><a href=\"#图片区域的生成\" class=\"headerlink\" title=\"图片区域的生成\"></a>图片区域的生成</h3><p>使用html2canvas截取DOM节点时，DOM必修要全部在可视区范围内。比如页面滚动时，需要截取的DOM有一部分不在可视区，那么生成的图片也不完成，是阉割版的。所以要在页面加载完之后就生成幕布。</p>\n<h3 id=\"图片产生跨域问题\"><a href=\"#图片产生跨域问题\" class=\"headerlink\" title=\"图片产生跨域问题\"></a>图片产生跨域问题</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> opts = &#123;</span><br><span class=\"line\">            allowTaint:<span class=\"literal\">false</span>,<span class=\"comment\">//允许加载跨域的图片</span></span><br><span class=\"line\">            tainttest:<span class=\"literal\">true</span>, <span class=\"comment\">//检测每张图片都已经加载完成</span></span><br><span class=\"line\">            scale:scaleBy, <span class=\"comment\">// 添加的scale 参数</span></span><br><span class=\"line\">            canvas:canvas, <span class=\"comment\">//自定义 canvas</span></span><br><span class=\"line\">            logging: <span class=\"literal\">false</span>, <span class=\"comment\">//日志开关，发布的时候记得改成false</span></span><br><span class=\"line\">            width:width, <span class=\"comment\">//dom 原始宽度</span></span><br><span class=\"line\">            height:height, <span class=\"comment\">//dom 原始高度</span></span><br><span class=\"line\">            useCORS: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"html2canvas对Css的支持有限\"><a href=\"#html2canvas对Css的支持有限\" class=\"headerlink\" title=\"html2canvas对Css的支持有限\"></a>html2canvas对Css的支持有限</h3><p>脚本遍历加载它的页面的DOM。它收集那里所有元素的信息，然后使用这些信息构建页面的表示。换句话说，它并不实际获取页面的屏幕快照，而是基于从DOM读取的属性构建页面的表示形式。</p>\n<p>因此，它只能正确地呈现它所理解的属性，这意味着有许多CSS属性无法工作。有关受支持的CSS属性的完整列表。</p>\n<h2 id=\"微信分享\"><a href=\"#微信分享\" class=\"headerlink\" title=\"微信分享\"></a>微信分享</h2><h3 id=\"Url\"><a href=\"#Url\" class=\"headerlink\" title=\"Url\"></a>Url</h3><p>有时项目中Url上需要带参数，比如：产品线，FR等。微信分享后可能会在我们自己的Url上带上微信的参数这样有时候会导致我们找不到自己需要的参数，做好判断取自己的参数就行。</p>\n<h3 id=\"二次分享\"><a href=\"#二次分享\" class=\"headerlink\" title=\"二次分享\"></a>二次分享</h3><p>微信二次分享时，可能会丢掉title和图标。这时候就需要借助微信的JS-SDK。</p>\n<p><a href=\"https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n","categories":[],"tags":[]},{"title":"项目二期、三期心得","url":"http://weileilei.top/项目二期、三期心得/","content":"<p>其实二、三好多的东西都总结在一期里面了，所以可能会少点。第四期的PRD文档PM已经开始编写了，据说工作量不少。</p>\n<h2 id=\"autofocus-在移动版-Safari-上不工作\"><a href=\"#autofocus-在移动版-Safari-上不工作\" class=\"headerlink\" title=\"autofocus 在移动版 Safari 上不工作\"></a><code>autofocus</code> 在移动版 <code>Safari</code> 上不工作</h2><p>这个是我看vue的API时看到的，我还没用过。vue的directive可以解决，官方文档写的挺好，没必要在这里解释。</p>\n<h2 id=\"VUE的directive自定义指令\"><a href=\"#VUE的directive自定义指令\" class=\"headerlink\" title=\"VUE的directive自定义指令\"></a><code>VUE</code>的<code>directive</code>自定义指令</h2><p>百度了几个使用案例：1.拖拽 2.图片加载。</p>\n<p>总结一下： 使用component显得太重的时候，又得与作DOM打交道（轻量的component）</p>\n<p>## </p>\n","categories":[],"tags":[]},{"title":"远程同步代码的工具","url":"http://weileilei.top/远程同步代码的工具/","content":"<h2 id=\"rsync\"><a href=\"#rsync\" class=\"headerlink\" title=\"rsync\"></a>rsync</h2><h2 id=\"fis\"><a href=\"#fis\" class=\"headerlink\" title=\"fis\"></a>fis</h2><h2 id=\"ideal配置远程ftp的方式，可以批量同步\"><a href=\"#ideal配置远程ftp的方式，可以批量同步\" class=\"headerlink\" title=\"ideal配置远程ftp的方式，可以批量同步\"></a>ideal配置远程ftp的方式，可以批量同步</h2><h2 id=\"samba\"><a href=\"#samba\" class=\"headerlink\" title=\"samba\"></a>samba</h2>","categories":[],"tags":[]},{"title":"代码中的小技巧","url":"http://weileilei.top/代码中的小技巧/","content":"<h2 id=\"Underscore和Lodash\"><a href=\"#Underscore和Lodash\" class=\"headerlink\" title=\"Underscore和Lodash\"></a>Underscore和Lodash</h2><p>Underscore一个JavaScript实用库，提供了一整套函数式编程的实用功能，但是没有扩展任何JavaScript内置对象。对于写Node处理数据，使用起来非常的方便。</p>\n<h2 id=\"new-Date\"><a href=\"#new-Date\" class=\"headerlink\" title=\"+new Date()\"></a>+new Date()</h2><p>加号是一个很好的转换符号，我们都知道在js当中使用<code>+</code>的时候，js会先把数据内容转换成<code>Number</code>类型，如果转换失败将会是NAN。<br>所以在有些需要转换<code>Number</code>的时候，<code>+</code>还是十分好用的。<br> +new Date 将会调用 Date.prototype 上的 valueOf 方法，而根据 MDN ，Date.prototype.value 方法等同于 Date.prototype.getTime() 。</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(+<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().valueOf());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() * <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6字符串拼接\"><a href=\"#ES6字符串拼接\" class=\"headerlink\" title=\"ES6字符串拼接\"></a>ES6字符串拼接</h2> <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(+<span class=\"string\">`<span class=\"subst\">$&#123;timenString&#125;</span>000`</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h2><p> for循环中，如果遇见了break语句，这个for循环就会立即终止，不在进行其他的迭代了。<br> break语句只能跳出当前所在的最内层循环，如果你这个break就是想终止所有的循环，那么JS中允许你给循环语句加label</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//break只能终止内层循环，但是我们就是想要终止外层循环</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//就要给外层循环加label：</span></span><br><span class=\"line\"> </span><br><span class=\"line\">waiceng : <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span> ; i &lt;= <span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">　　 <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = <span class=\"number\">1</span> ; j &lt;= <span class=\"number\">10</span> ; j++) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">　　　　 <span class=\"built_in\">console</span>.log(i,j);</span><br><span class=\"line\"> </span><br><span class=\"line\">　　　　<span class=\"keyword\">if</span>(j == <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">　　　　 <span class=\"keyword\">break</span> waiceng; <span class=\"comment\">//break label的语法</span></span><br><span class=\"line\"> </span><br><span class=\"line\">　　　　 &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">　　 &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":[],"tags":[]},{"title":"js的对象是无序的","url":"http://weileilei.top/js的对象是无序的/","content":"<h2 id=\"问题出现\"><a href=\"#问题出现\" class=\"headerlink\" title=\"问题出现\"></a>问题出现</h2><p>Chrome Opera 中使用 for-in 语句遍历对象属性时会遵循一个规律，它们会先提取所有 key 的 parseFloat 值为非负整数的属性， 然后根据数字顺序对属性排序首先遍历出来，然后按照对象定义的顺序遍历余下的所有属性。其它浏览器则完全按照对象定义的顺序遍历属性。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">      city: <span class=\"string\">\"Beijing\"</span>,</span><br><span class=\"line\">      <span class=\"number\">12</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\">      <span class=\"number\">7</span>: <span class=\"number\">7</span>,</span><br><span class=\"line\">      <span class=\"number\">0</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"string\">\"-2\"</span>: <span class=\"number\">-2</span>,</span><br><span class=\"line\">      <span class=\"string\">\"age\"</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">      <span class=\"string\">\"-3.5\"</span>: <span class=\"number\">-3.5</span>,</span><br><span class=\"line\">      <span class=\"number\">7.7</span>: <span class=\"number\">7.7</span>,</span><br><span class=\"line\">      _: <span class=\"string\">\"___\"</span>,</span><br><span class=\"line\">      online: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"number\">3</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">      <span class=\"string\">\"23\"</span>: <span class=\"string\">\"23\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"44\"</span>: <span class=\"number\">44</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>上面的代码在不同浏览器可能会出现不一样的情况</p>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><p>按照你需要的顺序为<code>key</code>值的最前面加上数字，浏览器会按照首字母数字进行排序</p>\n","categories":[],"tags":[]},{"title":"一个不错的写法","url":"http://weileilei.top/一个不错的写法/","content":"<p>今天爱神教了一个不错的写法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(&#123;</span><br><span class=\"line\">    a: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">info</span>) </span>&#123;<span class=\"built_in\">console</span>.log(info)&#125;,</span><br><span class=\"line\">    b: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">info</span>) </span>&#123;<span class=\"built_in\">console</span>.log(info)&#125;</span><br><span class=\"line\">&#125;)[<span class=\"string\">'a'</span>](<span class=\"string\">'xxx'</span>)</span><br></pre></td></tr></table></figure>\n<p>利用对象的判断写法，可以省去很多的判断</p>\n","categories":[],"tags":["Es6"]},{"title":"项目一期心得","url":"http://weileilei.top/项目一期心得/","content":"<p>在场景端做的第一项目的一期内容后很多的感悟。<br>首先，从代码规范上来讲，自己写的代码太随心所欲。从整洁度上来说，不利于代码的可读性。</p>\n<h2 id=\"注释以及多余的代码没有及时的删除\"><a href=\"#注释以及多余的代码没有及时的删除\" class=\"headerlink\" title=\"注释以及多余的代码没有及时的删除\"></a>注释以及多余的代码没有及时的删除</h2><p>由于刚开始写项目交互时先写好了注释内容，但在项目进行时，发现有的方法多余，开发后忘记删除旧的注释内容，导致别人读取代码时逻辑混淆。<br>使用完console和debugger时要记住删除，不然会暴露代码。尽量使用页面打断点的方法。</p>\n<h2 id=\"严格遵循代码命名规则\"><a href=\"#严格遵循代码命名规则\" class=\"headerlink\" title=\"严格遵循代码命名规则\"></a>严格遵循代码命名规则</h2><p>1.变量名使用Camel命名法<br>2.常量使用<code>全部字母大写</code>，<code>单词下划线分割</code>的命名方法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> HTML_DIV</span><br></pre></td></tr></table></figure></p>\n<p>3.函数、函数的参数、类的属性、方法使用Camel命名法<br>4.类、枚举变量使用Pascal命名法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span>  TargetState= &#123;</span><br><span class=\"line\">    READING: <span class=\"number\">1</span>,</span><br><span class=\"line\">    READED: <span class=\"number\">2</span>,</span><br><span class=\"line\">    APPLIED: <span class=\"number\">3</span>,</span><br><span class=\"line\">    READY: <span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>5.缩写单词，根据当前命名法和出现的位置，所有字母的大小写与首字母的大小写保持一致</p>\n<h2 id=\"多使用解构赋值\"><a href=\"#多使用解构赋值\" class=\"headerlink\" title=\"多使用解构赋值\"></a>多使用解构赋值</h2><p>项目中多使用解构赋值，尽量少使用‘=’赋值</p>\n<h2 id=\"做项目的时候发现遗漏点时用笔记住\"><a href=\"#做项目的时候发现遗漏点时用笔记住\" class=\"headerlink\" title=\"做项目的时候发现遗漏点时用笔记住\"></a>做项目的时候发现遗漏点时用笔记住</h2><p>因为做项目时开发时，可能开发很多的模块。有时候为了赶进度需要把模块的大体结构写好，这是想起其他模块的遗漏需求就需要用笔记下来，还有爱神给提出的关键点（划重点…）。这样做完大体模块后回头写一写细节的时候就不容易遗漏了。</p>\n<h2 id=\"下一期目标学习微信小程序，React\"><a href=\"#下一期目标学习微信小程序，React\" class=\"headerlink\" title=\"下一期目标学习微信小程序，React\"></a>下一期目标学习微信小程序，React</h2><p>等需求完成后需要自学这些，并且注意<code>React</code>的<code>JSX</code>（爱神提了一嘴，我不会React = =！以后学习的时候注意学习一下）</p>\n","categories":[],"tags":[]},{"title":"初学Node，总结一些分散点","url":"http://weileilei.top/初学Node，总结一些分散点/","content":"<p>会<code>JS</code>了不起啊！对!会<code>JS</code>真的了不起，<code>JS</code>可以写前端，<code>JS</code>可以写后端，<code>JS</code>可以写客户端，<code>JS</code>还可以写区块链应用，<code>JS</code>还可以写操作系统。大家都说<code>JS</code>是奇淫技巧，但是<code>JS</code>真的是一门可以深学的语言。NodeJS就是用<code>JS</code>来写后台的常用工具。<br>刚开始学习Node，目前呢我的计划是先学习阿里的《7天学会NodeJS》，然后学习《深入浅出NODEJS》，先对Node有个浅显的概念然后开始深入的了解。现在的项目中虽然有Node的开发环节，但是我在Node中真的是小白，所以不对Node进行开发。‘学好’Node真的有很大的价值，我记得在1年前的面试中就有面试官提到，Node不是让你简简单单的用一个Express来起个服务，MySql弄个增删改查就行了。作为一个合格的前端Node是自己的必备技能。</p>\n<h2 id=\"模块初始化\"><a href=\"#模块初始化\" class=\"headerlink\" title=\"模块初始化\"></a>模块初始化</h2><p>一个模块中的JS代码仅在模块第一次被使用时执行一次，并在执行过程中初始化模块的导出对象。之后，缓存起来的导出对象被重复利用。<br>简单的说就是被多次引用的模块，每次引用并不会因为引用的对象不同而初始化模块的变量。换句话说，相同模块中的变量是共享的。</p>\n<h2 id=\"模块路径解析规则\"><a href=\"#模块路径解析规则\" class=\"headerlink\" title=\"模块路径解析规则\"></a>模块路径解析规则</h2><p>我们已经知道，require函数支持斜杠（<code>/</code>）或盘符（<code>C:</code>）开头的绝对路径，也支持./开头的相对路径。但这两种路径在模块之间建立了强耦合关系，一旦某个模块文件的存放位置需要变更，使用该模块的其它模块的代码也需要跟着调整，变得牵一发动全身。因此，require函数支持第三种形式的路径，写法类似于<code>foo/bar</code>，并依次按照以下规则解析路径，直到找到模块位置。</p>\n<h2 id=\"查看Node安装包的路径\"><a href=\"#查看Node安装包的路径\" class=\"headerlink\" title=\"查看Node安装包的路径\"></a>查看Node安装包的路径</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm root -g</span><br></pre></td></tr></table></figure>\n<h2 id=\"Node安装包时会扁平化安装\"><a href=\"#Node安装包时会扁平化安装\" class=\"headerlink\" title=\"Node安装包时会扁平化安装\"></a>Node安装包时会扁平化安装</h2><p>如此一来，用户只需关心自己直接使用的三方包，不需要自己去解决所有包的依赖关系。</p>\n<h2 id=\"npm的一些常用命令\"><a href=\"#npm的一些常用命令\" class=\"headerlink\" title=\"npm的一些常用命令\"></a>npm的一些常用命令</h2><p>除了本章介绍的部分外，NPM还提供了很多功能，<code>package.json</code>里也有很多其它有用的字段。除了可以在npmjs.org/doc/查看官方文档外，这里再介绍一些NPM常用命令。</p>\n<ul>\n<li><p>NPM提供了很多命令，例如install和publish，使用npm help可查看所有命令。</p>\n</li>\n<li><p>使用<code>npm help &lt;command&gt;</code>可查看某条命令的详细帮助，例如<code>npm help install</code>。</p>\n</li>\n<li><p>在<code>package.json</code>所在目录下使用<code>npm install . -g</code>可先在本地安装当前命令行程序，可用于发布前的本地测试。</p>\n</li>\n<li><p>使用<code>npm update &lt;package&gt;</code>可以把当前目录下<code>node_modules</code>子目录里边的对应模块更新至最新版本。</p>\n</li>\n<li><p>使用<code>npm update &lt;package&gt; -g</code>可以把全局安装的对应命令行程序更新至最新版。</p>\n</li>\n<li><p>使用<code>npm cache clear</code>可以清空NPM本地缓存，用于对付使用相同版本号发布新版本代码的人。</p>\n</li>\n<li><p>使用<code>npm unpublish &lt;package&gt;@&lt;version&gt;</code>可以撤销发布自己发布过的某个版本代码。</p>\n</li>\n</ul>\n<h2 id=\"Node可以操作文件\"><a href=\"#Node可以操作文件\" class=\"headerlink\" title=\"Node可以操作文件\"></a>Node可以操作文件</h2><p>使用fs模块可以对文件进行一写基本的操作</p>\n<p>简单的复制文件<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">    fs.writeFileSync(dst, fs.readFileSync(src));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">main</span>(<span class=\"params\">argv</span>) </span>&#123;</span><br><span class=\"line\">    copy(argv[<span class=\"number\">0</span>], argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main(process.argv.slice(<span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure></p>\n<p>这个方法只适合小文件的拷贝，如果大文件使用这个方法内存会爆仓。我自己的理解计算机会把文件全部都读取完后再进行写，就好比让一个人去吃东西，一次让他吃完再消化会撑死他，那么我们就让他吃点然后就消化点，这样就有了下面的方法。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">    fs.createReadStream(src).pipe(fs.createWriteStream(dst));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">main</span>(<span class=\"params\">argv</span>) </span>&#123;</span><br><span class=\"line\">    copy(argv[<span class=\"number\">0</span>], argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main(process.argv.slice(<span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure>\n<p>使用过gulp的同学都知道pipe这个概念，这个就相当于是一个管道用来连接方法的。</p>\n<h2 id=\"Buffer\"><a href=\"#Buffer\" class=\"headerlink\" title=\"Buffer\"></a>Buffer</h2><p>Buffer与字符串有一个重要区别。字符串是只读的，并且对字符串的任何修改得到的都是一个新字符串，原字符串保持不变,至于Buffer，更像是可以做指针操作的C语言数组。slice在数组的处理中我们都知道他会返回一个新的数组，而.slice方法也不是返回一个新的Buffer，而更像是返回了指向原Buffer中间的某个位置的指针。</p>\n","categories":[],"tags":[]},{"title":"一道不错的面试题","url":"http://weileilei.top/一道不错的面试题/","content":"<p>今天从公众号上看到一道不错的面试题，拔下来。</p>\n<p>前言</p>\n<p>看到这个的时候，觉得面试简直就是“宫斗剧”，内心戏都很足啊。今日早读文章由@Liril授权分享。</p>\n<p>正文从这开始～</p>\n<p>金三银四搞事季，前端这个近年的热门领域，搞事气氛特别强烈，我朋友小伟最近就在疯狂面试，遇到了许多有趣的面试官，有趣的面试题，我来帮这个搞事 boy 转述一下。</p>\n<p>以下是我一个朋友的故事，真的不是我。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>“小伟，你说说这几行代码会输出什么？”</p>\n<p>当面试官在 Sublime 打出这几行代码时，我竟有点蒙蔽。蛤？这不是最简单的一个循环吗？是不是有陷阱啊，我思索一下，这好像和我看的那个闭包的题很像啊，这面试官是不是没写完啊？有毒啊。</p>\n<p>“应该是直接输出 0 到 4 吧…”，我弱弱的说到。</p>\n<p>“是啊，别紧张，这题没啥陷阱，我就是随便写一下。”</p>\n<p>（Excuse me？面试官你是来搞笑的吗，吓死老子了！）</p>\n<p>“那你在看看这几行代码会输出什么？”</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span> * i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>额，什么鬼，怎么还不是我背了那么多遍的那道闭包题，让我想想。 setTimeout 会延迟执行，那么执行到 console.log 的时候，其实 i 已经变成 5 了，对，就是这样，这么简单怎么可能难到老子。</p>\n<p>“应该是开始输出一个 5，然后每隔一秒再输出一个 5，一共 5 个 5。”</p>\n<p>“对，那应该怎么改才能输出 0 到 4 呢？”</p>\n<p>终于到我熟悉的了，加个闭包就解决了，稳！</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">    &#125;, i * <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;)(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>“很好，那你能说一下，我删掉这个 i 会发生什么吗？”</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">    &#125;, i * <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;)(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>“这样子的话，内部其实没有对 i 保持引用，其实会变成输出 5。”</p>\n<p>“很好，那我给你改一下，你看看会输出什么？”</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout((<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">  &#125;)(i), i * <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>蛤？什么鬼，这是什么情况，让我想想。这里给 setTimeout 传递了一个立即执行函数。额，setTimeout 可以接受函数或者字符串作为参数，那么这里立即执行函数是个啥呢，应该是个 undefined ，也就是说等价于：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout(<span class=\"literal\">undefined</span>, ...);</span><br></pre></td></tr></table></figure>\n<p>而立即执行函数会立即执行，那么应该是立马输出的。</p>\n<p>“应该是立马输出 0 到 4 吧。”</p>\n<p>“哎哟，不错哦，最后一题，你对 Promise 了解吧？”</p>\n<p>“还可以吧…”</p>\n<p>“OK，那你试试这道题。”</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">executor</span>(<span class=\"params\">resolve</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span>( <span class=\"keyword\">var</span> i=<span class=\"number\">0</span> ; i&lt;<span class=\"number\">10000</span> ; i++ ) &#123;</span><br><span class=\"line\">    i == <span class=\"number\">9999</span> &amp;&amp; resolve();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n<p>WTF！！！！我想静静！</p>\n<p>这道题应该考察我 JavaScript 的运行机制的，让我理一下思路。</p>\n<p>首先先碰到一个 setTimeout，于是会先设置一个定时，在定时结束后将传递这个函数放到任务队列里面，因此开始肯定不会输出 1 。</p>\n<p>然后是一个 Promise，里面的函数是直接执行的，因此应该直接输出 2 3 。</p>\n<p>然后，Promise 的 then 应当会放到当前 tick 的最后，但是还是在当前 tick 中。</p>\n<p>因此，应当先输出 5，然后再输出 4 。</p>\n<p>最后在到下一个 tick，就是 1 。</p>\n<p>“2 3 5 4 1”</p>\n<p>“好滴，等待下一轮面试吧。”</p>\n<p>So easy！妈妈再也不用担心我的面试了。</p>\n","categories":[],"tags":["前端"]},{"title":"linux中的常用命令","url":"http://weileilei.top/linux中的常用命令/","content":"<p>为什么要开始记录学习linux命令呢？因为爱神说：‘回去好好看看linux基本命令’….<br>一边记录一边学习一边记忆。</p>\n<h1 id=\"Linux常用命令\"><a href=\"#Linux常用命令\" class=\"headerlink\" title=\"Linux常用命令\"></a>Linux常用命令</h1><h2 id=\"系统信息\"><a href=\"#系统信息\" class=\"headerlink\" title=\"系统信息\"></a>系统信息</h2><p>arch 显示机器的处理器架构(1)<br>uname -m 显示机器的处理器架构(2)<br>uname -r 显示正在使用的内核版本<br>dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI)<br>hdparm -i /dev/hda 罗列一个磁盘的架构特性<br>hdparm -tT /dev/sda 在磁盘上执行测试性读取操作<br>cat /proc/cpuinfo 显示CPU info的信息<br>cat /proc/interrupts 显示中断<br>cat /proc/meminfo 校验内存使用<br>cat /proc/swaps 显示哪些swap被使用<br>cat /proc/version 显示内核的版本<br>cat /proc/net/dev 显示网络适配器及统计<br>cat /proc/mounts 显示已加载的文件系统<br>lspci -tv 罗列 PCI 设备<br>lsusb -tv 显示 USB 设备<br>date 显示系统日期<br>cal 2007 显示2007年的日历表<br>date 041217002007.00 设置日期和时间 - 月日时分年.秒<br>clock -w 将时间修改保存到 BIOS </p>\n<h2 id=\"关机-系统的关机、重启以及登出\"><a href=\"#关机-系统的关机、重启以及登出\" class=\"headerlink\" title=\"关机 (系统的关机、重启以及登出)\"></a>关机 (系统的关机、重启以及登出)</h2><p>shutdown -h now 关闭系统(1)<br>init 0 关闭系统(2)<br>telinit 0 关闭系统(3)<br>shutdown -h hours:minutes &amp; 按预定时间关闭系统<br>shutdown -c 取消按预定时间关闭系统<br>shutdown -r now 重启(1)<br>reboot 重启(2)<br>logout 注销 </p>\n<h2 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h2><p>cd /home 进入 ‘/ home’ 目录’<br>cd .. 返回上一级目录<br>cd ../.. 返回上两级目录<br>cd 进入个人的主目录<br>cd ~user1 进入个人的主目录<br>cd - 返回上次所在的目录<br>pwd 显示工作路径<br>ls 查看目录中的文件<br>ls -F 查看目录中的文件<br>ls -l 显示文件和目录的详细资料<br>ls -a 显示隐藏文件<br>ls <em>[0-9]</em> 显示包含数字的文件名和目录名<br>tree 显示文件和目录由根目录开始的树形结构(1)<br>lstree 显示文件和目录由根目录开始的树形结构(2)<br>mkdir dir1 创建一个叫做 ‘dir1’ 的目录’<br>mkdir dir1 dir2 同时创建两个目录<br>mkdir -p /tmp/dir1/dir2 创建一个目录树<br>rm -f file1 删除一个叫做 ‘file1’ 的文件’<br>rmdir dir1 删除一个叫做 ‘dir1’ 的目录’<br>rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容<br>rm -rf dir1 dir2 同时删除两个目录及它们的内容<br>mv dir1 new_dir 重命名/移动 一个目录<br>cp file1 file2 复制一个文件<br>cp dir/<em> . 复制一个目录下的所有文件到当前工作目录<br>cp -a /tmp/dir1 . 复制一个目录到当前工作目录<br>cp -a dir1 dir2 复制一个目录<br>ln -s file1 lnk1 创建一个指向文件或目录的软链接<br>ln file1 lnk1 创建一个指向文件或目录的物理链接<br>touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)<br>file file1 outputs the mime type of the file as text<br>iconv -l 列出已知的编码<br>iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding.<br>find . -maxdepth 1 -name </em>.jpg -print -exec convert “{}” -resize 80x60 “thumbs/{}” \\; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) </p>\n<h2 id=\"文件搜索\"><a href=\"#文件搜索\" class=\"headerlink\" title=\"文件搜索\"></a>文件搜索</h2><p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录<br>find / -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件<br>find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件<br>find / -name *.rpm -exec chmod 755 ‘{}’ \\; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备<br>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令<br>whereis halt 显示一个二进制文件、源码或man的位置<br>which halt 显示一个二进制文件或可执行文件的完整路径</p>\n<h2 id=\"挂载一个文件系统\"><a href=\"#挂载一个文件系统\" class=\"headerlink\" title=\"挂载一个文件系统\"></a>挂载一个文件系统</h2><p>mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在<br>umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出<br>fuser -km /mnt/hda2 当设备繁忙时强制卸载<br>umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用<br>mount /dev/fd0 /mnt/floppy 挂载一个软盘<br>mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom<br>mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom<br>mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom<br>mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件<br>mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统<br>mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备<br>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享 </p>\n<h2 id=\"磁盘空间\"><a href=\"#磁盘空间\" class=\"headerlink\" title=\"磁盘空间\"></a>磁盘空间</h2><p>df -h 显示已经挂载的分区列表<br>ls -lSr |more 以尺寸大小排列文件和目录<br>du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’<br>du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小<br>rpm -q -a –qf ‘%10{SIZE}t%{NAME}n’ | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)<br>dpkg-query -W -f=’${Installed-Size;10}t${Package}n’ | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统</p>\n<h2 id=\"用户和群组\"><a href=\"#用户和群组\" class=\"headerlink\" title=\"用户和群组\"></a>用户和群组</h2><p>groupadd group_name 创建一个新用户组<br>groupdel group_name 删除一个用户组<br>groupmod -n new_group_name old_group_name 重命名一个用户组<br>useradd -c “Name Surname “ -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户<br>useradd user1 创建一个新用户<br>userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录)<br>usermod -c “User FTP” -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性<br>passwd 修改口令<br>passwd user1 修改一个用户的口令 (只允许root执行)<br>chage -E 2005-12-31 user1 设置用户口令的失效期限<br>pwck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的用户<br>grpck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的群组<br>newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组 </p>\n<h2 id=\"文件的权限-使用-“-”-设置权限，使用-“-“-用于取消\"><a href=\"#文件的权限-使用-“-”-设置权限，使用-“-“-用于取消\" class=\"headerlink\" title=\"文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消\"></a>文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消</h2><p>ls -lh 显示权限<br>ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示<br>chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限<br>chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限<br>chown user1 file1 改变一个文件的所有人属性<br>chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性<br>chgrp group1 file1 改变文件的群组<br>chown user1:group1 file1 改变一个文件的所有人和群组属性<br>find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件<br>chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限<br>chmod u-s /bin/file1 禁用一个二进制文件的 SUID位<br>chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的<br>chmod g-s /home/public 禁用一个目录的 SGID 位<br>chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件<br>chmod o-t /home/public 禁用一个目录的 STIKY 位</p>\n<h2 id=\"文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消\"><a href=\"#文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消\" class=\"headerlink\" title=\"文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消\"></a>文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消</h2><p>chattr +a file1 只允许以追加方式读写文件<br>chattr +c file1 允许这个文件能被内核自动压缩/解压<br>chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件<br>chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接<br>chattr +s file1 允许一个文件被安全地删除<br>chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘<br>chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件<br>lsattr 显示特殊的属性</p>\n<h2 id=\"打包和压缩文件\"><a href=\"#打包和压缩文件\" class=\"headerlink\" title=\"打包和压缩文件\"></a>打包和压缩文件</h2><p>bunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件<br>bzip2 file1 压缩一个叫做 ‘file1’ 的文件<br>gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件<br>gzip file1 压缩一个叫做 ‘file1’的文件<br>gzip -9 file1 最大程度压缩<br>rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包<br>rar a file1.rar file1 file2 dir1 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’<br>rar x file1.rar 解压rar包<br>unrar x file1.rar 解压rar包<br>tar -cvf archive.tar file1 创建一个非压缩的 tarball<br>tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件<br>tar -tf archive.tar 显示一个包中的内容<br>tar -xvf archive.tar 释放一个包<br>tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下<br>tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包<br>tar -xvfj archive.tar.bz2 解压一个bzip2格式的压缩包<br>tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包<br>tar -xvfz archive.tar.gz 解压一个gzip格式的压缩包<br>zip file1.zip file1 创建一个zip格式的压缩包<br>zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包<br>unzip file1.zip 解压一个zip格式压缩包 </p>\n<h2 id=\"RPM-包-（Fedora-Redhat及类似系统）\"><a href=\"#RPM-包-（Fedora-Redhat及类似系统）\" class=\"headerlink\" title=\"RPM 包 - （Fedora, Redhat及类似系统）\"></a>RPM 包 - （Fedora, Redhat及类似系统）</h2><p>rpm -ivh package.rpm 安装一个rpm包<br>rpm -ivh –nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告<br>rpm -U package.rpm 更新一个rpm包但不改变其配置文件<br>rpm -F package.rpm 更新一个确定已经安装的rpm包<br>rpm -e package_name.rpm 删除一个rpm包<br>rpm -qa 显示系统中所有已经安装的rpm包<br>rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包<br>rpm -qi package_name 获取一个已安装包的特殊信息<br>rpm -qg “System Environment/Daemons” 显示一个组件的rpm包<br>rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表<br>rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表<br>rpm -q package_name –whatrequires 显示与一个rpm包存在依赖关系的列表<br>rpm -q package_name –whatprovides 显示一个rpm包所占的体积<br>rpm -q package_name –scripts 显示在安装/删除期间所执行的脚本l<br>rpm -q package_name –changelog 显示一个rpm包的修改历史<br>rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供<br>rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表<br>rpm –import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书<br>rpm –checksig package.rpm 确认一个rpm包的完整性<br>rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性<br>rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间<br>rpm -Va 检查系统中所有已安装的rpm包- 小心使用<br>rpm -Vp package.rpm 确认一个rpm包还未安装<br>rpm2cpio package.rpm | cpio –extract –make-directories <em>bin</em> 从一个rpm包运行可执行文件<br>rpm -ivh /usr/src/redhat/RPMS/<code>arch</code>/package.rpm 从一个rpm源码安装一个构建好的包<br>rpmbuild –rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包 </p>\n<h2 id=\"YUM-软件包升级器-（Fedora-RedHat及类似系统）\"><a href=\"#YUM-软件包升级器-（Fedora-RedHat及类似系统）\" class=\"headerlink\" title=\"YUM 软件包升级器 - （Fedora, RedHat及类似系统）\"></a>YUM 软件包升级器 - （Fedora, RedHat及类似系统）</h2><p>yum install package_name 下载并安装一个rpm包<br>yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>yum update package_name.rpm 更新当前系统中所有安装的rpm包<br>yum update package_name 更新一个rpm包<br>yum remove package_name 删除一个rpm包<br>yum list 列出当前系统中安装的所有包<br>yum search package_name 在rpm仓库中搜寻软件包<br>yum clean packages 清理rpm缓存删除下载的包<br>yum clean headers 删除所有头文件<br>yum clean all 删除所有缓存的包和头文件 </p>\n<h2 id=\"DEB-包-Debian-Ubuntu-以及类似系统\"><a href=\"#DEB-包-Debian-Ubuntu-以及类似系统\" class=\"headerlink\" title=\"DEB 包 (Debian, Ubuntu 以及类似系统)\"></a>DEB 包 (Debian, Ubuntu 以及类似系统)</h2><p>dpkg -i package.deb 安装/更新一个 deb 包<br>dpkg -r package_name 从系统删除一个 deb 包<br>dpkg -l 显示系统中所有已经安装的 deb 包<br>dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的deb包<br>dpkg -s package_name 获得已经安装在系统中一个特殊包的信息<br>dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表<br>dpkg –contents package.deb 显示尚未安装的一个包所提供的文件列表<br>dpkg -S /bin/ping 确认所给的文件由哪个deb包提供 </p>\n<h2 id=\"APT-软件工具-Debian-Ubuntu-以及类似系统\"><a href=\"#APT-软件工具-Debian-Ubuntu-以及类似系统\" class=\"headerlink\" title=\"APT 软件工具 (Debian, Ubuntu 以及类似系统)\"></a>APT 软件工具 (Debian, Ubuntu 以及类似系统)</h2><p>apt-get install package_name 安装/更新一个 deb 包<br>apt-cdrom install package_name 从光盘安装/更新一个 deb 包<br>apt-get update 升级列表中的软件包<br>apt-get upgrade 升级所有已安装的软件<br>apt-get remove package_name 从系统删除一个deb包<br>apt-get check 确认依赖的软件仓库正确<br>apt-get clean 从下载的软件包中清理缓存<br>apt-cache search searched-package 返回包含所要搜索字符串的软件包名称 </p>\n<h2 id=\"查看文件内容\"><a href=\"#查看文件内容\" class=\"headerlink\" title=\"查看文件内容\"></a>查看文件内容</h2><p>cat file1 从第一个字节开始正向查看文件的内容<br>tac file1 从最后一行开始反向查看一个文件的内容<br>more file1 查看一个长文件的内容<br>less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作<br>head -2 file1 查看一个文件的前两行<br>tail -2 file1 查看一个文件的最后两行<br>tail -f /var/log/messages 实时查看被添加到一个文件中的内容 </p>\n<h2 id=\"文本处理\"><a href=\"#文本处理\" class=\"headerlink\" title=\"文本处理\"></a>文本处理</h2><p>cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中<br>grep Aug /var/log/messages 在文件 ‘/var/log/messages’中查找关键词”Aug”<br>grep ^Aug /var/log/messages 在文件 ‘/var/log/messages’中查找以”Aug”开始的词汇<br>grep [0-9] /var/log/messages 选择 ‘/var/log/messages’ 文件中所有包含数字的行<br>grep Aug -R /var/log/<em> 在目录 ‘/var/log’ 及随后的目录中搜索字符串”Aug”<br>sed ‘s/stringa1/stringa2/g’ example.txt 将example.txt文件中的 “string1” 替换成 “string2”<br>sed ‘/^$/d’ example.txt 从example.txt文件中删除所有空白行<br>sed ‘/ </em>#/d; /^$/d’ example.txt 从example.txt文件中删除所有注释和空白行<br>echo ‘esempio’ | tr ‘[:lower:]’ ‘[:upper:]’ 合并上下单元格内容<br>sed -e ‘1d’ result.txt 从文件example.txt 中排除第一行<br>sed -n ‘/stringa1/p’ 查看只包含词汇 “string1”的行<br>sed -e ‘s/ <em>$//‘ example.txt 删除每一行最后的空白字符<br>sed -e ‘s/stringa1//g’ example.txt 从文档中只删除词汇 “string1” 并保留剩余全部<br>sed -n ‘1,5p;5q’ example.txt 查看从第一行到第5行内容<br>sed -n ‘5p;5q’ example.txt 查看第5行<br>sed -e ‘s/00</em>/0/g’ example.txt 用单个零替换多个零<br>cat -n file1 标示文件的行数<br>cat example.txt | awk ‘NR%2==1’ 删除example.txt文件中的所有偶数行<br>echo a b c | awk ‘{print $1}’ 查看一行第一栏<br>echo a b c | awk ‘{print $1,$3}’ 查看一行的第一和第三栏<br>paste file1 file2 合并两个文件或两栏的内容<br>paste -d ‘+’ file1 file2 合并两个文件或两栏的内容，中间用”+”区分<br>sort file1 file2 排序两个文件的内容<br>sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份)<br>sort file1 file2 | uniq -u 删除交集，留下其他的行<br>sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件)<br>comm -1 file1 file2 比较两个文件的内容只删除 ‘file1’ 所包含的内容<br>comm -2 file1 file2 比较两个文件的内容只删除 ‘file2’ 所包含的内容<br>comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分 </p>\n<h2 id=\"字符设置和文件格式转换\"><a href=\"#字符设置和文件格式转换\" class=\"headerlink\" title=\"字符设置和文件格式转换\"></a>字符设置和文件格式转换</h2><p>dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX<br>unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS<br>recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html<br>recode -l | more 显示所有允许的转换格式 </p>\n<h2 id=\"文件系统分析\"><a href=\"#文件系统分析\" class=\"headerlink\" title=\"文件系统分析\"></a>文件系统分析</h2><p>badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块<br>fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性<br>fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性<br>fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性<br>dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 </p>\n<h2 id=\"初始化一个文件系统\"><a href=\"#初始化一个文件系统\" class=\"headerlink\" title=\"初始化一个文件系统\"></a>初始化一个文件系统</h2><p>mkfs /dev/hda1 在hda1分区创建一个文件系统<br>mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统<br>mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统<br>mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统<br>fdformat -n /dev/fd0 格式化一个软盘<br>mkswap /dev/hda3 创建一个swap文件系统 </p>\n<h2 id=\"SWAP文件系统\"><a href=\"#SWAP文件系统\" class=\"headerlink\" title=\"SWAP文件系统\"></a>SWAP文件系统</h2><p>mkswap /dev/hda3 创建一个swap文件系统<br>swapon /dev/hda3 启用一个新的swap文件系统<br>swapon /dev/hda2 /dev/hdb3 启用两个swap分区 </p>\n<h2 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h2><p>dump -0aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的完整备份<br>dump -1aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的交互式备份<br>restore -if /tmp/home0.bak 还原一个交互式备份<br>rsync -rogpav –delete /home /tmp 同步两边的目录<br>rsync -rogpav -e ssh –delete /home ip_address:/tmp 通过SSH通道rsync<br>rsync -az -e ssh –delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录<br>rsync -az -e ssh –delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录<br>dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr ‘dd of=hda.gz’ 通过ssh在远程主机上执行一次备份本地磁盘的操作<br>dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件<br>tar -Puf backup.tar /home/user 执行一次对 ‘/home/user’ 目录的交互式备份操作<br>( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr ‘cd /home/share/ &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个目录内容<br>( tar c /home ) | ssh -C user@ip_addr ‘cd /home/backup-home &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个本地目录<br>tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接<br>find /home/user1 -name ‘<em>.txt’ | xargs cp -av –target-directory=/home/backup/ –parents 从一个目录查找并复制所有以 ‘.txt’ 结尾的文件到另一个目录<br>find /var/log -name ‘</em>.log’ | tar cv –files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 ‘.log’ 结尾的文件并做成一个bzip包<br>dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作<br>dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容 </p>\n<h2 id=\"光盘\"><a href=\"#光盘\" class=\"headerlink\" title=\"光盘\"></a>光盘</h2><p>cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容<br>mkisofs /dev/cdrom &gt; cd.iso 在磁盘上创建一个光盘的iso镜像文件<br>mkisofs /dev/cdrom | gzip &gt; cd_iso.gz 在磁盘上创建一个压缩了的光盘iso镜像文件<br>mkisofs -J -allow-leading-dots -R -V “Label CD” -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件<br>cdrecord -v dev=/dev/cdrom cd.iso 刻录一个ISO镜像文件<br>gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件<br>mount -o loop cd.iso /mnt/iso 挂载一个ISO镜像文件<br>cd-paranoia -B 从一个CD光盘转录音轨到 wav 文件中<br>cd-paranoia – “-3” 从一个CD光盘转录音轨到 wav 文件中（参数-3）<br>cdrecord –scanbus 扫描总线以识别scsi通道<br>dd if=/dev/hdc | md5sum 校验一个设备的md5sum编码，例如一张 CD </p>\n<h2 id=\"网络-（以太网和WIFI无线）\"><a href=\"#网络-（以太网和WIFI无线）\" class=\"headerlink\" title=\"网络 - （以太网和WIFI无线）\"></a>网络 - （以太网和WIFI无线）</h2><p>ifconfig eth0 显示一个以太网卡的配置<br>ifup eth0 启用一个 ‘eth0’ 网络设备<br>ifdown eth0 禁用一个 ‘eth0’ 网络设备<br>ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址<br>ifconfig eth0 promisc 设置 ‘eth0’ 成混杂模式以嗅探数据包 (sniffing)<br>dhclient eth0 以dhcp模式启用 ‘eth0’<br>route -n show routing table<br>route add -net 0/0 gw IP_Gateway configura default gateway<br>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network ‘192.168.0.0/16’<br>route del 0/0 gw IP_gateway remove static route<br>echo “1” &gt; /proc/sys/net/ipv4/ip_forward activate ip routing<br>hostname show hostname of system<br>host <a href=\"http://www.example.com\" target=\"_blank\" rel=\"noopener\">www.example.com</a> lookup hostname to resolve name to ip address and viceversa(1)<br>nslookup <a href=\"http://www.example.com\" target=\"_blank\" rel=\"noopener\">www.example.com</a> lookup hostname to resolve name to ip address and viceversa(2)<br>ip link show show link status of all interfaces<br>mii-tool eth0 show link status of ‘eth0’<br>ethtool eth0 show statistics of network card ‘eth0’<br>netstat -tup show all active network connections and their PID<br>netstat -tupl show all network services listening on the system and their PID<br>tcpdump tcp port 80 show all HTTP traffic<br>iwlist scan show wireless networks<br>iwconfig eth1 show configuration of a wireless network card<br>hostname show hostname<br>host <a href=\"http://www.example.com\" target=\"_blank\" rel=\"noopener\">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>nslookup <a href=\"http://www.example.com\" target=\"_blank\" rel=\"noopener\">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>whois <a href=\"http://www.example.com\" target=\"_blank\" rel=\"noopener\">www.example.com</a> lookup on Whois database</p>\n","categories":[],"tags":["linux"]},{"title":"项目中的小坑与心得（持续更新）","url":"http://weileilei.top/项目中的小坑（持续更新）/","content":"<p>刚开始开发项目，项目中总有一些你不知道的小坑，我就总结一下。因为项目一直在开发，所以会随时更新，会像一个小的项目笔记。</p>\n<h3 id=\"1-fix3-parser-vue-component-gt-4-x-lt-5-x支持vue-1-x。\"><a href=\"#1-fix3-parser-vue-component-gt-4-x-lt-5-x支持vue-1-x。\" class=\"headerlink\" title=\"1.fix3-parser-vue-component &gt;= 4.x &lt; 5.x支持vue 1.x。\"></a>1.fix3-parser-vue-component &gt;= 4.x &lt; 5.x支持vue 1.x。</h3><h3 id=\"2-查看全局包命令-npm-root-g\"><a href=\"#2-查看全局包命令-npm-root-g\" class=\"headerlink\" title=\"2.查看全局包命令 npm root -g\"></a>2.查看全局包命令 npm root -g</h3><h3 id=\"3-‘-’：js安位非运算符\"><a href=\"#3-‘-’：js安位非运算符\" class=\"headerlink\" title=\"3.‘~’：js安位非运算符\"></a>3.‘~’：js安位非运算符</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~<span class=\"number\">1</span> == <span class=\"number\">-2</span></span><br></pre></td></tr></table></figure>\n<p>那么这个值是怎么来的呢？</p>\n<ul>\n<li>将<code>1</code>(这里叫：原码)转二进制 ＝ <code>00000001</code></li>\n<li>按位取反 ＝ <code>11111110</code></li>\n<li>发现符号位(即最高位)为<code>1</code>(表示负数)，将除符号位之外的其他数字取反 ＝ <code>10000001</code></li>\n<li>末位加1取其补码 ＝ <code>10000010</code></li>\n<li>转换回十进制 ＝ <code>-2</code></li>\n</ul>\n<h3 id=\"4-发现一个不错的写法\"><a href=\"#4-发现一个不错的写法\" class=\"headerlink\" title=\"4.发现一个不错的写法\"></a>4.发现一个不错的写法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> whiteList = res.data.whiteList;</span><br><span class=\"line\"><span class=\"keyword\">let</span> params = &#123;&#125;;</span><br><span class=\"line\">whiteList &amp;&amp; (params.whiteType = whiteList === <span class=\"number\">1</span> ? <span class=\"number\">2</span> : <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-提取URL的参数\"><a href=\"#5-提取URL的参数\" class=\"headerlink\" title=\"5.提取URL的参数\"></a>5.提取URL的参数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> = searvh = location.search.length ? location.serach.substr(<span class=\"number\">1</span>) : <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (serach.length) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = search.split(<span class=\"string\">\"&amp;\"</span>);</span><br><span class=\"line\">    arr.foreach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tempArr = item.split(<span class=\"string\">'='</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> [key, value] = tempArr;</span><br><span class=\"line\">        obj[key] = value;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> obj;</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-路径跳转\"><a href=\"#6-路径跳转\" class=\"headerlink\" title=\"6.路径跳转\"></a>6.路径跳转</h3><p>在自己写demo时，使用vue路由跳转，发现跳进路由后跳不出来。<br>原因：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"ecmascript-6\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  name: <span class=\"string\">'veeDemo'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>data里面没有加return</p>\n<h3 id=\"7-elementUI-表单验证时，表单数据为多层结构时验证失败\"><a href=\"#7-elementUI-表单验证时，表单数据为多层结构时验证失败\" class=\"headerlink\" title=\"7.elementUI,表单验证时，表单数据为多层结构时验证失败\"></a>7.elementUI,表单验证时，表单数据为多层结构时验证失败</h3><p>解决方法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">\"telempate\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dynamicValidateForm\"</span> <span class=\"attr\">label-width</span>=<span class=\"string\">\"100px\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo-dynamic\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:prop</span>=<span class=\"string\">\"'page.title'\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"标题\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:rules</span>=<span class=\"string\">\"[</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      &#123; required: true, message: '输入内容不能为空', trigger: 'blur' &#125;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    ]\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"telempate.page.title\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'form-vaildate'</span>,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      telempate: &#123;</span><br><span class=\"line\">        page: &#123;</span><br><span class=\"line\">          title: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        head: &#123;</span><br><span class=\"line\">          headImg: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>prop里面的路径用变量表示并且加上单引号</p>\n<h3 id=\"8-npm的i-apify\"><a href=\"#8-npm的i-apify\" class=\"headerlink\" title=\"8.npm的i-apify\"></a>8.npm的i-apify</h3><p>apify很适合前端请求，三个参数分别为：<br>1.请求方式<br>2.请求路径，请求的参数<br>3.请求的参数<br>为什么说他好用呢？因为他有一套自己的请求生命周期，会vue的同学对生命周期的理解应该不会很难。apify可以操作请求前的操作，请求后的操作，请求失败的操作等等，这样就给了我们充分准备的空间，具体api还是要看官网。</p>\n<h3 id=\"9-elementUI一些规范问题\"><a href=\"#9-elementUI一些规范问题\" class=\"headerlink\" title=\"9.elementUI一些规范问题\"></a>9.elementUI一些规范问题</h3><p>1.在使用elementUI时，对组件传参和事件时最好使用‘-’连接命名，如果写成驼峰写法的时候编译打包可能会出现问题</p>\n<h3 id=\"10-vue组件的闭合风格问题\"><a href=\"#10-vue组件的闭合风格问题\" class=\"headerlink\" title=\"10.vue组件的闭合风格问题\"></a>10.vue组件的闭合风格问题</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 在单文件组件、字符串模板和 JSX 中 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 在 DOM 模板中 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"11-上线代码时，检查没有删除的样式\"><a href=\"#11-上线代码时，检查没有删除的样式\" class=\"headerlink\" title=\"11.上线代码时，检查没有删除的样式\"></a>11.上线代码时，检查没有删除的样式</h3><p>因为做的是移动端自适应的，刚开始页面排版时有些东西写死了，测试的时候忘记删除，这也应该记住</p>\n<h3 id=\"12-移动端测试\"><a href=\"#12-移动端测试\" class=\"headerlink\" title=\"12.移动端测试\"></a>12.移动端测试</h3><p>1.手机测试的时候关闭广告拦截功能，今天项目测试时，页面一直打不开，一直以为是js报错，等爱神出现让我查看日志时才发现，一直都没有请求日志，肯定不是我们的问题。然后就开始一直鼓捣手机，把广告拦截关闭后页面才出来。因为是测试环境，页面的url是以自己的机器名为开头的，估计把页面当成是广告全部给拦截掉了，所以导致页面什么都没有（大坑）。<br>2.小米手机不支持vue的backgroundImage行内样式，如果有需要动态创建的背景图片可以通过模板渲染进页面中<br>3.background-size在安卓手机下有问题</p>\n<h3 id=\"13-组件传参时也可以结构赋值\"><a href=\"#13-组件传参时也可以结构赋值\" class=\"headerlink\" title=\"13.组件传参时也可以结构赋值\"></a>13.组件传参时也可以结构赋值</h3><h3 id=\"14-好好学习结构赋值\"><a href=\"#14-好好学习结构赋值\" class=\"headerlink\" title=\"14.好好学习结构赋值\"></a>14.好好学习结构赋值</h3><h3 id=\"15-vue出了自己的官方UI组件\"><a href=\"#15-vue出了自己的官方UI组件\" class=\"headerlink\" title=\"15.vue出了自己的官方UI组件\"></a>15.vue出了自己的官方UI组件</h3><p><a href=\"https://vuejs.github.io/ui/#/\" target=\"_blank\" rel=\"noopener\">VUE官方UI组件</a></p>\n<h3 id=\"16-vuex-router-sync\"><a href=\"#16-vuex-router-sync\" class=\"headerlink\" title=\"16.vuex-router-sync\"></a>16.vuex-router-sync</h3><p><a href=\"https://github.com/vuejs/vuex-router-sync\" target=\"_blank\" rel=\"noopener\">VUEX_ROUTER_SYNC</a><br>当使用vuex时，可以用<code>vuex-router-sync</code>，可以把路由的参数放进state里面。</p>\n<h3 id=\"17-文件路径要严格按照文件名大小写格式\"><a href=\"#17-文件路径要严格按照文件名大小写格式\" class=\"headerlink\" title=\"17.文件路径要严格按照文件名大小写格式\"></a>17.文件路径要严格按照文件名大小写格式</h3><p>测试打包时可能没有影响，但是在上线时对文件名有严格的问题</p>\n<h3 id=\"18-请求头要设置好\"><a href=\"#18-请求头要设置好\" class=\"headerlink\" title=\"18.请求头要设置好\"></a>18.请求头要设置好</h3><p><code>Http Header</code>里的<code>Content-Type</code>一般有这三种：<br><code>application/x-www-form-urlencoded</code>：数据被编码为名称/值对。这是标准的编码格式。<br><code>multipart/form-data</code>： 数据被编码为一条消息，页上的每个控件对应消息中的一个部分。<br><code>text/plain</code>： 数据以纯文本形式(text/json/xml/html)进行编码，其中不含任何控件或格式字符。postman软件里标的是RAW。</p>\n<p>form的<code>enctype</code>属性为编码方式，常用有两种：<code>application/x-www-form-urlencoded</code>和<code>multipart/form-data</code>，默认为<code>application/x-www-form-urlencoded</code>。</p>\n<p>当action为get时候，浏览器用<code>x-www-form-urlencoded</code>的编码方式把form数据转换成一个字串（name1=value1&amp;name2=value2…），然后把这个字串追加到url后面，用?分割，加载这个新的url。</p>\n<p>当action为post时候，浏览器把form数据封装到http body中，然后发送到server。 如果没有<code>type=file</code>的控件，用默认的<code>application/x-www-form-urlencoded</code>就可以了。 但是如果有<code>type=file</code>的话，就要用到<code>multipart/form-data</code>了。</p>\n<p>当action为post且Content-Type类型是multipart/form-data，浏览器会把整个表单以控件为单位分割，并为每个部分加上Content-Disposition(form-data或者file),Content-Type(默认为text/plain),name(控件name)等信息，并加上分割符(boundary)。</p>\n<h3 id=\"19-统一模块命名，路由命名\"><a href=\"#19-统一模块命名，路由命名\" class=\"headerlink\" title=\"19.统一模块命名，路由命名\"></a>19.统一模块命名，路由命名</h3><p>路由路径可以使用驼峰的方法进行命名但是<code>开头不要大写</code>。<br>文件模块命名规则：文件名+模块名+动作说明</p>\n<h3 id=\"20-轻量级的进度条\"><a href=\"#20-轻量级的进度条\" class=\"headerlink\" title=\"20.轻量级的进度条\"></a>20.轻量级的进度条</h3><p><code>nprogress</code> 一款轻量级的进度条</p>\n<h3 id=\"21-领券时要考虑防刷\"><a href=\"#21-领券时要考虑防刷\" class=\"headerlink\" title=\"21.领券时要考虑防刷\"></a>21.领券时要考虑防刷</h3><p>做领券这种热门商品时应该要考虑防刷机制。<br>1.通常是封ip。如果相同的ip在短时间内请求多次，运维人员应把相应的IP封掉，不让请求继续请求进来。<br>2.在应用做个开关,一旦QPS达到一定的量则打开开关进行限流。<br>3.如果某个商品的库存已经为0了，就没必要每次都去请求DB了，没意义了，可以把库存为0的数据放置到缓存中，抵挡部分请求，降低DB的压力。</p>\n<h3 id=\"22-qa测试的基本流程\"><a href=\"#22-qa测试的基本流程\" class=\"headerlink\" title=\"22.qa测试的基本流程\"></a>22.qa测试的基本流程</h3><p>1.冒烟测试<br>2.APP测试&amp;B端能力测试<br>3.ET测试<br>4.手机兼容性测试<br>5.沙盒测试</p>\n","categories":[],"tags":["前端"]},{"title":"场景端新项目的开发","url":"http://weileilei.top/场景端新项目的开发/","content":"<p>今天到金融的场景端这里来做新的项目，这个项目可以从零开发，每次的从零开发都会学到不少新的知识。（心中有小小的期待）</p>\n<p>前端技术栈：1.underscore.js<br>ps：清明回家的火车票买好了</p>\n","categories":[],"tags":["前端"]},{"title":"烟花动画","url":"http://weileilei.top/烟花动画/","content":"<p>看到了一个同学分享的烟花动画，感觉效果还可以，记录下来有空学习学习。<br>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">onload</span>=<span class=\"string\">\"init()\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background: #000\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"position:fixed;top:0;left:0;width:100%;overflow:hidden;z-index:-9999;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// when animating on canvas, it is best to use requestAnimationFrame instead of setTimeout or setInterval</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// not supported in all browsers though and sometimes needs a prefix, so we need a shim</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.requestAnimFrame = ( <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">window</span>.requestAnimationFrame ||</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">window</span>.webkitRequestAnimationFrame ||</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">window</span>.mozRequestAnimationFrame ||</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> callback </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">window</span>.setTimeout( callback, <span class=\"number\">1000</span> / <span class=\"number\">60</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// now we will setup our basic variables for the demo</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById( <span class=\"string\">'canvas'</span> ),</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tctx = canvas.getContext( <span class=\"string\">'2d'</span> ),</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// full screen dimensions</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcw = <span class=\"built_in\">window</span>.innerWidth,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tch = <span class=\"built_in\">window</span>.innerHeight,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// firework collection</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfireworks = [],</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// particle collection</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tparticles = [],</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// starting hue</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\thue = <span class=\"number\">120</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// when launching fireworks with a click, too many get launched at once without a limiter, one launch per 5 loop ticks</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tlimiterTotal = <span class=\"number\">5</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tlimiterTick = <span class=\"number\">0</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// this will time the auto launches of fireworks, one launch per 80 loop ticks</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttimerTotal = <span class=\"number\">80</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttimerTick = <span class=\"number\">0</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tmousedown = <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// mouse x coordinate,</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tmx,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// mouse y coordinate</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tmy;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// set canvas dimensions</span></span><br><span class=\"line\"></span><br><span class=\"line\">canvas.width = cw;</span><br><span class=\"line\"></span><br><span class=\"line\">canvas.height = ch;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// now we are going to setup our function placeholders for the entire demo</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// get a random number within a range</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">random</span>(<span class=\"params\"> min, max </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.random() * ( max - min ) + min;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// calculate the distance between two points</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calculateDistance</span>(<span class=\"params\"> p1x, p1y, p2x, p2y </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> xDistance = p1x - p2x,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tyDistance = p1y - p2y;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.sqrt( <span class=\"built_in\">Math</span>.pow( xDistance, <span class=\"number\">2</span> ) + <span class=\"built_in\">Math</span>.pow( yDistance, <span class=\"number\">2</span> ) );</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// create firework</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Firework</span>(<span class=\"params\"> sx, sy, tx, ty </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// actual coordinates</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.x = sx;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.y = sy;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// starting coordinates</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.sx = sx;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.sy = sy;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// target coordinates</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.tx = tx;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.ty = ty;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// distance from starting point to target</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.distanceToTarget = calculateDistance( sx, sy, tx, ty );</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.distanceTraveled = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// track the past coordinates of each firework to create a trail effect, increase the coordinate count to create more prominent trails</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.coordinates = [];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.coordinateCount = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// populate initial coordinate collection with the current coordinates</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>( <span class=\"keyword\">this</span>.coordinateCount-- ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.coordinates.push( [ <span class=\"keyword\">this</span>.x, <span class=\"keyword\">this</span>.y ] );</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.angle = <span class=\"built_in\">Math</span>.atan2( ty - sy, tx - sx );</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.speed = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.acceleration = <span class=\"number\">1.05</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.brightness = random( <span class=\"number\">50</span>, <span class=\"number\">70</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// circle target indicator radius</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.targetRadius = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// update firework</span></span><br><span class=\"line\"></span><br><span class=\"line\">Firework.prototype.update = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> index </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// remove last item in coordinates array</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.coordinates.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// add current coordinates to the start of the array</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.coordinates.unshift( [ <span class=\"keyword\">this</span>.x, <span class=\"keyword\">this</span>.y ] );</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// cycle the circle target indicator radius</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( <span class=\"keyword\">this</span>.targetRadius &lt; <span class=\"number\">8</span> ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.targetRadius += <span class=\"number\">0.3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.targetRadius = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// speed up the firework</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.speed *= <span class=\"keyword\">this</span>.acceleration;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// get the current velocities based on angle and speed</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> vx = <span class=\"built_in\">Math</span>.cos( <span class=\"keyword\">this</span>.angle ) * <span class=\"keyword\">this</span>.speed,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tvy = <span class=\"built_in\">Math</span>.sin( <span class=\"keyword\">this</span>.angle ) * <span class=\"keyword\">this</span>.speed;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// how far will the firework have traveled with velocities applied?</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.distanceTraveled = calculateDistance( <span class=\"keyword\">this</span>.sx, <span class=\"keyword\">this</span>.sy, <span class=\"keyword\">this</span>.x + vx, <span class=\"keyword\">this</span>.y + vy );</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// if the distance traveled, including velocities, is greater than the initial distance to the target, then the target has been reached</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( <span class=\"keyword\">this</span>.distanceTraveled &gt;= <span class=\"keyword\">this</span>.distanceToTarget ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcreateParticles( <span class=\"keyword\">this</span>.tx, <span class=\"keyword\">this</span>.ty );</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// remove the firework, use the index passed into the update function to determine which to remove</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfireworks.splice( index, <span class=\"number\">1</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// target not reached, keep traveling</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.x += vx;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.y += vy;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// draw firework</span></span><br><span class=\"line\"></span><br><span class=\"line\">Firework.prototype.draw = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.beginPath();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// move to the last tracked coordinate in the set, then draw a line to the current x and y</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.moveTo( <span class=\"keyword\">this</span>.coordinates[ <span class=\"keyword\">this</span>.coordinates.length - <span class=\"number\">1</span>][ <span class=\"number\">0</span> ], <span class=\"keyword\">this</span>.coordinates[ <span class=\"keyword\">this</span>.coordinates.length - <span class=\"number\">1</span>][ <span class=\"number\">1</span> ] );</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.lineTo( <span class=\"keyword\">this</span>.x, <span class=\"keyword\">this</span>.y );</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.strokeStyle = <span class=\"string\">'hsl('</span> + hue + <span class=\"string\">', 100%, '</span> + <span class=\"keyword\">this</span>.brightness + <span class=\"string\">'%)'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.beginPath();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// draw the target for this firework with a pulsing circle</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.arc( <span class=\"keyword\">this</span>.tx, <span class=\"keyword\">this</span>.ty, <span class=\"keyword\">this</span>.targetRadius, <span class=\"number\">0</span>, <span class=\"built_in\">Math</span>.PI * <span class=\"number\">2</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// create particle</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Particle</span>(<span class=\"params\"> x, y </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.x = x;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.y = y;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// track the past coordinates of each particle to create a trail effect, increase the coordinate count to create more prominent trails</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.coordinates = [];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.coordinateCount = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>( <span class=\"keyword\">this</span>.coordinateCount-- ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.coordinates.push( [ <span class=\"keyword\">this</span>.x, <span class=\"keyword\">this</span>.y ] );</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// set a random angle in all possible directions, in radians</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.angle = random( <span class=\"number\">0</span>, <span class=\"built_in\">Math</span>.PI * <span class=\"number\">2</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.speed = random( <span class=\"number\">1</span>, <span class=\"number\">10</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// friction will slow the particle down</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.friction = <span class=\"number\">0.95</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// gravity will be applied and pull the particle down</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.gravity = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// set the hue to a random number +-20 of the overall hue variable</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.hue = random( hue - <span class=\"number\">20</span>, hue + <span class=\"number\">20</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.brightness = random( <span class=\"number\">50</span>, <span class=\"number\">80</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.alpha = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// set how fast the particle fades out</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.decay = random( <span class=\"number\">0.015</span>, <span class=\"number\">0.03</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// update particle</span></span><br><span class=\"line\"></span><br><span class=\"line\">Particle.prototype.update = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> index </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// remove last item in coordinates array</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.coordinates.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// add current coordinates to the start of the array</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.coordinates.unshift( [ <span class=\"keyword\">this</span>.x, <span class=\"keyword\">this</span>.y ] );</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// slow down the particle</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.speed *= <span class=\"keyword\">this</span>.friction;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// apply velocity</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.x += <span class=\"built_in\">Math</span>.cos( <span class=\"keyword\">this</span>.angle ) * <span class=\"keyword\">this</span>.speed;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.y += <span class=\"built_in\">Math</span>.sin( <span class=\"keyword\">this</span>.angle ) * <span class=\"keyword\">this</span>.speed + <span class=\"keyword\">this</span>.gravity;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// fade out the particle</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.alpha -= <span class=\"keyword\">this</span>.decay;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// remove the particle once the alpha is low enough, based on the passed in index</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( <span class=\"keyword\">this</span>.alpha &lt;= <span class=\"keyword\">this</span>.decay ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tparticles.splice( index, <span class=\"number\">1</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// draw particle</span></span><br><span class=\"line\"></span><br><span class=\"line\">Particle.prototype.draw = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx. beginPath();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// move to the last tracked coordinates in the set, then draw a line to the current x and y</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.moveTo( <span class=\"keyword\">this</span>.coordinates[ <span class=\"keyword\">this</span>.coordinates.length - <span class=\"number\">1</span> ][ <span class=\"number\">0</span> ], <span class=\"keyword\">this</span>.coordinates[ <span class=\"keyword\">this</span>.coordinates.length - <span class=\"number\">1</span> ][ <span class=\"number\">1</span> ] );</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.lineTo( <span class=\"keyword\">this</span>.x, <span class=\"keyword\">this</span>.y );</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.strokeStyle = <span class=\"string\">'hsla('</span> + <span class=\"keyword\">this</span>.hue + <span class=\"string\">', 100%, '</span> + <span class=\"keyword\">this</span>.brightness + <span class=\"string\">'%, '</span> + <span class=\"keyword\">this</span>.alpha + <span class=\"string\">')'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// create particle group/explosion</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createParticles</span>(<span class=\"params\"> x, y </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// increase the particle count for a bigger explosion, beware of the canvas performance hit with the increased particles though</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> particleCount = <span class=\"number\">30</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>( particleCount-- ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tparticles.push( <span class=\"keyword\">new</span> Particle( x, y ) );</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main demo loop</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loop</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// this function will run endlessly with requestAnimationFrame</span></span><br><span class=\"line\"></span><br><span class=\"line\">\trequestAnimFrame( loop );</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// increase the hue to get different colored fireworks over time</span></span><br><span class=\"line\"></span><br><span class=\"line\">\thue += <span class=\"number\">0.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// normally, clearRect() would be used to clear the canvas</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// we want to create a trailing effect though</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// setting the composite operation to destination-out will allow us to clear the canvas at a specific opacity, rather than wiping it entirely</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.globalCompositeOperation = <span class=\"string\">'destination-out'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// decrease the alpha property to create more prominent trails</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.fillStyle = <span class=\"string\">'rgba(0, 0, 0, 0.5)'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.fillRect( <span class=\"number\">0</span>, <span class=\"number\">0</span>, cw, ch );</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// change the composite operation back to our main mode</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// lighter creates bright highlight points as the fireworks and particles overlap each other</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tctx.globalCompositeOperation = <span class=\"string\">'lighter'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// loop over each firework, draw it, update it</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = fireworks.length;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>( i-- ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfireworks[ i ].draw();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfireworks[ i ].update( i );</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// loop over each particle, draw it, update it</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = particles.length;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>( i-- ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tparticles[ i ].draw();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tparticles[ i ].update( i );</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// launch fireworks automatically to random coordinates, when the mouse isn't down</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( timerTick &gt;= timerTotal ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( !mousedown ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// start the firework at the bottom middle of the screen, then set the random target coordinates, the random y coordinates will be set within the range of the top half of the screen</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tfireworks.push( <span class=\"keyword\">new</span> Firework( cw / <span class=\"number\">2</span>, ch, random( <span class=\"number\">0</span>, cw ), random( <span class=\"number\">0</span>, ch / <span class=\"number\">2</span> ) ) );</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\ttimerTick = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttimerTick++;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// limit the rate at which fireworks get launched when mouse is down</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( limiterTick &gt;= limiterTotal ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( mousedown ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// start the firework at the bottom middle of the screen, then set the current mouse coordinates as the target</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tfireworks.push( <span class=\"keyword\">new</span> Firework( cw / <span class=\"number\">2</span>, ch, mx, my ) );</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tlimiterTick = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tlimiterTick++;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// mouse event bindings</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// update the mouse coordinates on mousemove</span></span><br><span class=\"line\"></span><br><span class=\"line\">canvas.addEventListener( <span class=\"string\">'mousemove'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> e </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tmx = e.pageX - canvas.offsetLeft;</span><br><span class=\"line\"></span><br><span class=\"line\">\tmy = e.pageY - canvas.offsetTop;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// toggle mousedown state and prevent canvas from being selected</span></span><br><span class=\"line\"></span><br><span class=\"line\">canvas.addEventListener( <span class=\"string\">'mousedown'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> e </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\te.preventDefault();</span><br><span class=\"line\"></span><br><span class=\"line\">\tmousedown = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">canvas.addEventListener( <span class=\"string\">'mouseup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> e </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\te.preventDefault();</span><br><span class=\"line\"></span><br><span class=\"line\">\tmousedown = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// once the window loads, we are ready for some fireworks!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.onload = loop;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n","categories":[],"tags":["canvas"]},{"title":"面试中一些模糊的问题","url":"http://weileilei.top/面试中一些模糊的问题/","content":"<p>今天去手百部门进行了一些面试，有些东西好久不用真的会慢慢的生疏，我把面试中遇到的一些问题我回答上的还有没有回答上的都列出来（需要写代码的部分必须要完全手写出来），让自己铭记有些东西不复习一下再简单也会忘的。本文对提到的问题并不是深刻的解析，对一些问题以后会另开专题学习。</p>\n<h2 id=\"CSS有几种盒模型？\"><a href=\"#CSS有几种盒模型？\" class=\"headerlink\" title=\"CSS有几种盒模型？\"></a>CSS有几种盒模型？</h2><p>盒模型一共有两种模式，一种是标准模式，另一种就是怪异模式。</p>\n<p>我们都知道当你建立html的时候都会生成一个<code>DOCTYPE</code>标签，而且知道<code>DOCTYPE</code>标签表示的是标准文档类型<br>比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC  <span class=\"string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span>  <span class=\"string\">\"http://www.w3.org/TR/html4/loose.dtd\"</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>然而如果我们没有声明<code>DOCTYPE</code>的话，在IE6、IE7、IE8就会触发<code>怪异模式</code>。<br>在标准模式下的盒模型就是我们平常认知的盒模型。但是在怪异模式下，盒子的总宽度是包含内边距padding和边框border的。如果不好认知的话，我们可以用css3的<code>box-sizing</code>来举例。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">box-sizing</span>: <span class=\"selector-tag\">content-box</span></span><br><span class=\"line\">// 这是标准模式计算的</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">box-sizing</span>: <span class=\"selector-tag\">border-box</span></span><br><span class=\"line\">// 这是怪异模式计算的</span><br></pre></td></tr></table></figure>\n<h2 id=\"前端如何解决跨域问题？有几种做法\"><a href=\"#前端如何解决跨域问题？有几种做法\" class=\"headerlink\" title=\"前端如何解决跨域问题？有几种做法?\"></a>前端如何解决跨域问题？有几种做法?</h2><h3 id=\"为什么要用跨域？\"><a href=\"#为什么要用跨域？\" class=\"headerlink\" title=\"为什么要用跨域？\"></a>为什么要用跨域？</h3><p>了解了同源策略（同域名、同协议、同端口）的话就知道为什么要跨域了。<br>要知道<code>&lt;img&gt;</code>的src、<code>&lt;link&gt;</code>的href、<code>&lt;script&gt;</code>的src这三个都不遵循同源策略，所以可以用他们来考虑跨域，jsonp就是使用的<code>&lt;script&gt;</code>标签实现的</p>\n<p>JSONP由两部分组成：回调函数和数据。回调函数是当响应到来时应该在页面中调用的函数。回调函数的名字一般是在请求中指定的。而数据就是传入回调函数中的 JSON 数据。</p>\n<p>在写src的路径时要传入你自己设定的<code>callback</code>函数，页面中的<code>callback</code>的参数就是响应的数据。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JSONP实现跨域2<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mydiv\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span>&gt;</span>点击<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleResponse</span>(<span class=\"params\">response</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> oBtn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'btn'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    oBtn.onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;     </span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> script = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"script\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        script.src = <span class=\"string\">\"https://api.douban.com/v2/book/search?q=javascript&amp;count=1&amp;callback=handleResponse\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">document</span>.body.insertBefore(script, <span class=\"built_in\">document</span>.body.firstChild);   </span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>首先JSONP的安全问题不好保证，其次不容易确定JSONP的请求是否失败。但是如果接口中没有callback函数的接口我们要如何判断请求呢？那我们可以了解一下<code>CORS(跨域资源共享)</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span>  (request.from === jsonp) ? callback(data) : data ;</span><br></pre></td></tr></table></figure>\n<h3 id=\"什么是CORS？\"><a href=\"#什么是CORS？\" class=\"headerlink\" title=\"什么是CORS？\"></a>什么是CORS？</h3><p><a href=\"https://yq.aliyun.com/articles/69313\" target=\"_blank\" rel=\"noopener\">CORS</a>：Cross-Origin Resource Sharing 跨源资源共享</p>\n<h2 id=\"vue的双向绑定原理？view到model，model到view是如何变化的？\"><a href=\"#vue的双向绑定原理？view到model，model到view是如何变化的？\" class=\"headerlink\" title=\"vue的双向绑定原理？view到model，model到view是如何变化的？\"></a>vue的双向绑定原理？view到model，model到view是如何变化的？</h2><p>需要长期总结不能应付面试</p>\n<h2 id=\"jQuery的源码？对源码的理解与运行机制？\"><a href=\"#jQuery的源码？对源码的理解与运行机制？\" class=\"headerlink\" title=\"jQuery的源码？对源码的理解与运行机制？\"></a>jQuery的源码？对源码的理解与运行机制？</h2><p>需要长期的总结</p>\n<h2 id=\"webpack源码？\"><a href=\"#webpack源码？\" class=\"headerlink\" title=\"webpack源码？\"></a>webpack源码？</h2><p>需要长期的总结</p>\n<h2 id=\"如何做到前端节流？\"><a href=\"#如何做到前端节流？\" class=\"headerlink\" title=\"如何做到前端节流？\"></a>如何做到前端节流？</h2><h3 id=\"什么是前端函数节流？\"><a href=\"#什么是前端函数节流？\" class=\"headerlink\" title=\"什么是前端函数节流？\"></a>什么是前端函数节流？</h3><p>通俗点说，就是让你的计算机不那么高效率的使用你的函数。比如当我们进行拖拽时，我们要一直监听用户鼠标事件，这样非常消耗计算机的性能，如果性能过高很有可能使你的浏览器崩溃。</p>\n<h3 id=\"如何进行函数节流？\"><a href=\"#如何进行函数节流？\" class=\"headerlink\" title=\"如何进行函数节流？\"></a>如何进行函数节流？</h3><p>进行函数节流的方法就是加上定时器。首先，触发函数时先加上setTimeout,如果在某个你设定的时间段内进行了连续调用，我就会把之前的定时器clear，再setTimeout。</p>\n<h2 id=\"vue的父子传参以及vuex的使用？项目中最常用的方法\"><a href=\"#vue的父子传参以及vuex的使用？项目中最常用的方法\" class=\"headerlink\" title=\"vue的父子传参以及vuex的使用？项目中最常用的方法\"></a>vue的父子传参以及vuex的使用？项目中最常用的方法</h2><p>简答：<br>1.父传子可以直接在父组件中用变量传递给子组件，子组件通过props接收。<br>2.子组件可以通过$emit发送事件以及value从而传递给父组件。<br>3.provide可以向你的子孙组件中深度的传参，子孙组件中用inject来接收并且可以设置默认值。<br>4.建立空vue来传参（个人感觉很low）<br>5.vuex</p>\n<h2 id=\"ES6中async和promise的用法\"><a href=\"#ES6中async和promise的用法\" class=\"headerlink\" title=\"ES6中async和promise的用法\"></a>ES6中async和promise的用法</h2><p>需要长期总结</p>\n<h2 id=\"闭包的优点与缺点，写出事例：给每个li便签加点击事件，点击后输出对应的index？\"><a href=\"#闭包的优点与缺点，写出事例：给每个li便签加点击事件，点击后输出对应的index？\" class=\"headerlink\" title=\"闭包的优点与缺点，写出事例：给每个li便签加点击事件，点击后输出对应的index？\"></a>闭包的优点与缺点，写出事例：给每个li便签加点击事件，点击后输出对应的index？</h2><h3 id=\"什么是闭包？\"><a href=\"#什么是闭包？\" class=\"headerlink\" title=\"什么是闭包？\"></a>什么是闭包？</h3><p>首先要了解闭包就要知道javascript语言特有的‘链式作用域’结构。可以想象成为一个很自私的家族，作为儿子我可以开爸爸的汽车，而爸爸却不能开我的车。闭包就是为了解决这个问题，闭包就是能够读取其他函数内部变量的函数。由于在Javascript语言中，只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解成”定义在一个函数内部的函数”。</p>\n<h2 id=\"模块化思想？seaJs与requireJs的一些区别-转\"><a href=\"#模块化思想？seaJs与requireJs的一些区别-转\" class=\"headerlink\" title=\"模块化思想？seaJs与requireJs的一些区别?(转)\"></a>模块化思想？<code>seaJs</code>与<code>requireJs</code>的一些区别?(转)</h2><p>模块化的开发方式可以提高代码复用率，方便进行代码的管理。通常一个文件就是一个模块，有自己的作用域，只向外暴露特定的变量和函数。目前流行的js模块化规范有CommonJS、AMD、CMD以及ES6的模块系统。</p>\n<h3 id=\"一、CommonJS\"><a href=\"#一、CommonJS\" class=\"headerlink\" title=\"一、CommonJS\"></a>一、CommonJS</h3><p>Node.js是commonJS规范的主要实践者，它有四个重要的环境变量为模块化的实现提供支持：<code>module</code>、<code>exports</code>、<code>require</code>、<code>global</code>。实际使用时，用<code>module.exports</code>定义当前模块对外输出的接口（不推荐直接用<code>exports</code>），用<code>require</code>加载模块。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义模块math.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> basicNum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123; <span class=\"comment\">//在这里写上需要向外暴露的函数、变量</span></span><br><span class=\"line\">  add: add,</span><br><span class=\"line\">  basicNum: basicNum</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引用自定义的模块时，参数包含路径，可省略.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> math = <span class=\"built_in\">require</span>(<span class=\"string\">'./math'</span>);</span><br><span class=\"line\">math.add(<span class=\"number\">2</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引用核心模块时，不需要带路径</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\">http.createService(...).listen(<span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure>\n<p>commonJS用同步的方式加载模块。在服务端，模块文件都存在本地磁盘，读取非常快，所以这样做不会有问题。但是在浏览器端，限于网络原因，更合理的方案是使用异步加载。</p>\n<h3 id=\"二、AMD和require-js\"><a href=\"#二、AMD和require-js\" class=\"headerlink\" title=\"二、AMD和require.js\"></a>二、AMD和require.js</h3><p>AMD规范采用异步方式加载模块，模块的加载不影响它后面语句的运行。所有依赖这个模块的语句，都定义在一个回调函数中，等到加载完成之后，这个回调函数才会运行。这里介绍用<code>require.js</code>实现AMD规范的模块化：用<code>require.config()</code>指定引用路径等，用<code>define()</code>定义模块，用<code>require()</code>加载模块。</p>\n<p>首先我们需要引入<code>require.js</code>文件和一个入口文件<code>main.js</code>。<code>main.js</code>中配置<code>require.config()</code>并规定项目中用到的基础模块</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/** 网页中引入require.js及main.js **/</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/require.js\"</span> <span class=\"attr\">data-main</span>=<span class=\"string\">\"js/main\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** main.js 入口文件/主模块 **/</span></span><br><span class=\"line\"><span class=\"comment\">// 首先用config()指定各模块路径和引用名</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>.config(&#123;</span><br><span class=\"line\">  baseUrl: <span class=\"string\">\"js/lib\"</span>,</span><br><span class=\"line\">  paths: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"jquery\"</span>: <span class=\"string\">\"jquery.min\"</span>,  <span class=\"comment\">//实际路径为js/lib/jquery.min.js</span></span><br><span class=\"line\">    <span class=\"string\">\"underscore\"</span>: <span class=\"string\">\"underscore.min\"</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 执行基本操作</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>([<span class=\"string\">\"jquery\"</span>,<span class=\"string\">\"underscore\"</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$, _</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// some code here</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>引用模块的时候，我们将模块名放在[]中作为reqiure()的第一参数；如果我们定义的模块本身也依赖其他模块,那就需要将它们放在[]中作为define()的第一参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义math.js模块</span></span><br><span class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> basicNum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> add = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        add: add,</span><br><span class=\"line\">        basicNum :basicNum</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 定义一个依赖underscore.js的模块</span></span><br><span class=\"line\">define([<span class=\"string\">'underscore'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">_</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> classify = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">list</span>)</span>&#123;</span><br><span class=\"line\">    _.countBy(list, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> num &gt; <span class=\"number\">30</span> ? <span class=\"string\">'old'</span> : <span class=\"string\">'young'</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    classify :classify</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引用模块，将模块放在[]内</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>([<span class=\"string\">'jquery'</span>, <span class=\"string\">'math'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$, math</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum = math.add(<span class=\"number\">10</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  $(<span class=\"string\">\"#sum\"</span>).html(sum);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、CMD和sea-js\"><a href=\"#三、CMD和sea-js\" class=\"headerlink\" title=\"三、CMD和sea.js\"></a>三、CMD和sea.js</h3><p>require.js在申明依赖的模块时会在第一之间加载并执行模块内的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define([<span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span>, <span class=\"string\">\"c\"</span>, <span class=\"string\">\"d\"</span>, <span class=\"string\">\"e\"</span>, <span class=\"string\">\"f\"</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b, c, d, e, f</span>) </span>&#123; </span><br><span class=\"line\">    <span class=\"comment\">// 等于在最前面声明并初始化了要用到的所有模块</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 即便没用到某个模块 b，但 b 还是提前执行了</span></span><br><span class=\"line\">      b.foo()</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>CMD是另一种js模块化方案，它与AMD很类似，不同点在于：AMD 推崇依赖前置、提前执行，CMD推崇依赖就近、延迟执行。此规范其实是在sea.js推广过程中产生的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** AMD写法 **/</span></span><br><span class=\"line\">define([<span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span>, <span class=\"string\">\"c\"</span>, <span class=\"string\">\"d\"</span>, <span class=\"string\">\"e\"</span>, <span class=\"string\">\"f\"</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b, c, d, e, f</span>) </span>&#123; </span><br><span class=\"line\">     <span class=\"comment\">// 等于在最前面声明并初始化了要用到的所有模块</span></span><br><span class=\"line\">    a.doSomething();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 即便没用到某个模块 b，但 b 还是提前执行了</span></span><br><span class=\"line\">        b.doSomething()</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** CMD写法 **/</span></span><br><span class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">require, exports, module</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"built_in\">require</span>(<span class=\"string\">'./a'</span>); <span class=\"comment\">//在需要时申明</span></span><br><span class=\"line\">    a.doSomething();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> b = <span class=\"built_in\">require</span>(<span class=\"string\">'./b'</span>);</span><br><span class=\"line\">        b.doSomething();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** sea.js **/</span></span><br><span class=\"line\"><span class=\"comment\">// 定义模块 math.js</span></span><br><span class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">require, exports, module</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery.js'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> add = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    exports.add = add;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 加载模块</span></span><br><span class=\"line\">seajs.use([<span class=\"string\">'math.js'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">math</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sum = math.add(<span class=\"number\">1</span> + <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"四、ES6-Module\"><a href=\"#四、ES6-Module\" class=\"headerlink\" title=\"四、ES6 Module\"></a>四、ES6 Module</h3><p>ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，旨在成为浏览器和服务器通用的模块解决方案。其模块功能主要由两个命令构成：<code>export</code>和<code>import</code>。<code>export</code>命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 定义模块 math.js **/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> basicNum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> add = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; basicNum, add &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 引用模块 **/</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; basicNum, add &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./math'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">ele</span>) </span>&#123;</span><br><span class=\"line\">    ele.textContent = add(<span class=\"number\">99</span> + basicNum);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如上例所示，使用<code>import</code>命令的时候，用户需要知道所要加载的变量名或函数名。其实ES6还提供了<code>export default</code>命令，为模块指定默认输出，对应的<code>import</code>语句不需要使用大括号。这也更趋近于ADM的引用写法。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** export default **/</span></span><br><span class=\"line\"><span class=\"comment\">//定义输出</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123; basicNum, add &#125;;</span><br><span class=\"line\"><span class=\"comment\">//引入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> math <span class=\"keyword\">from</span> <span class=\"string\">'./math'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">ele</span>) </span>&#123;</span><br><span class=\"line\">    ele.textContent = math.add(<span class=\"number\">99</span> + math.basicNum);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ES6的模块不是对象，import命令会被 JavaScript 引擎静态分析，在编译时就引入模块代码，而不是在代码运行时加载，所以无法实现条件加载。也正因为这个，使得静态分析成为可能。</p>\n<h3 id=\"五、-ES6-模块与-CommonJS-模块的差异\"><a href=\"#五、-ES6-模块与-CommonJS-模块的差异\" class=\"headerlink\" title=\"五、 ES6 模块与 CommonJS 模块的差异\"></a>五、 ES6 模块与 CommonJS 模块的差异</h3><h4 id=\"1-CommonJS-模块输出的是一个值的拷贝，ES6-模块输出的是值的引用。\"><a href=\"#1-CommonJS-模块输出的是一个值的拷贝，ES6-模块输出的是值的引用。\" class=\"headerlink\" title=\"1. CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。\"></a>1. CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。</h4><ul>\n<li><p>CommonJS 模块输出的是值的拷贝，也就是说，一旦输出一个值，模块内部的变化就影响不到这个值。</p>\n</li>\n<li><p>ES6 模块的运行机制与 CommonJS 不一样。JS 引擎对脚本静态分析的时候，遇到模块加载命令import，就会生成一个只读引用。等到脚本真正执行时，再根据这个只读引用，到被加载的那个模块里面去取值。换句话说，ES6 的import有点像 Unix 系统的“符号连接”，原始值变了，import加载的值也会跟着变。因此，ES6 模块是动态引用，并且不会缓存值，模块里面的变量绑定其所在的模块。</p>\n</li>\n</ul>\n<h4 id=\"2-CommonJS-模块是运行时加载，ES6-模块是编译时输出接口。\"><a href=\"#2-CommonJS-模块是运行时加载，ES6-模块是编译时输出接口。\" class=\"headerlink\" title=\"2. CommonJS 模块是运行时加载，ES6 模块是编译时输出接口。\"></a>2. CommonJS 模块是运行时加载，ES6 模块是编译时输出接口。</h4><ul>\n<li><p>运行时加载: CommonJS 模块就是对象；即在输入时是先加载整个模块，生成一个对象，然后再从这个对象上面读取方法，这种加载称为“运行时加载”。</p>\n</li>\n<li><p>编译时加载: ES6 模块不是对象，而是通过 export 命令显式指定输出的代码，import时采用静态命令的形式。即在import时可以指定加载某个输出值，而不是加载整个模块，这种加载称为“编译时加载”。</p>\n</li>\n</ul>\n<h2 id=\"写一个person-39-li-39-39-lei-39-的类要求\"><a href=\"#写一个person-39-li-39-39-lei-39-的类要求\" class=\"headerlink\" title=\"写一个person(&#39;li&#39;,&#39;lei&#39;)的类要求?\"></a>写一个<code>person(&#39;li&#39;,&#39;lei&#39;)</code>的类要求?</h2><p>问：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> person(<span class=\"string\">'li'</span>,<span class=\"string\">'lei'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);</span><br><span class=\"line\"><span class=\"comment\">// 输出 ‘li lei’</span></span><br><span class=\"line\"></span><br><span class=\"line\">person.name = <span class=\"string\">'li hua'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 改变person的名字</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.firstName);</span><br><span class=\"line\"><span class=\"comment\">// 'li'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.lastName);</span><br><span class=\"line\"><span class=\"comment\">// 'hua'</span></span><br></pre></td></tr></table></figure>\n<p>答：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> (first, last) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.firstName = first;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.lastName = last;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  get name() &#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.firstName + <span class=\"string\">''</span> + <span class=\"keyword\">this</span>.lastName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  set name(fullName) &#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">this</span>.firstName = fullName.split(<span class=\"string\">' '</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">  \t<span class=\"keyword\">this</span>.lastName = fullName.split(<span class=\"string\">' '</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[],"tags":["web"]},{"title":"ES6中async的使用","url":"http://weileilei.top/ES6中aysnc-await的使用/","content":"<p>在项目中有时会遇到异步操作的问题，async就是解决异步操作的终极操作。我会以终极三问（what，why，when）的形式来说明什么是async。由于这是第一篇文章不知道怎么写，有很大部分是借鉴阮一峰老的原文，事例将会从我的项目中摘取。</p>\n<h2 id=\"async是什么？\"><a href=\"#async是什么？\" class=\"headerlink\" title=\"async是什么？\"></a>async是什么？</h2><h3 id=\"官方例子\"><a href=\"#官方例子\" class=\"headerlink\" title=\"官方例子\"></a>官方例子</h3><p><a href=\"http://es6.ruanyifeng.com/#docs/async\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>async相当于对Generator 函数的一个语法糖</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> readFile = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">fileName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">    fs.readFile(fileName, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error, data</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (error) <span class=\"keyword\">return</span> reject(error);</span><br><span class=\"line\">      resolve(data);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> gen = <span class=\"function\"><span class=\"keyword\">function</span>* (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> f1 = <span class=\"keyword\">yield</span> readFile(<span class=\"string\">'/etc/fstab'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> f2 = <span class=\"keyword\">yield</span> readFile(<span class=\"string\">'/etc/shells'</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f1.toString());</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f2.toString());</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>用async函数就换成了 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> asyncReadFile = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> f1 = <span class=\"keyword\">await</span> readFile(<span class=\"string\">'/etc/fstab'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> f2 = <span class=\"keyword\">await</span> readFile(<span class=\"string\">'/etc/shells'</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f1.toString());</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f2.toString());</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>那async与Genetator有什么区别呢？我自己的理解就是，更简单，更语义化，而且会自动执行。</p>\n<p>(1)自动执行</p>\n<blockquote>\n<p>我们知道 <code>generator</code> 函数需要通过调用<code>next()</code>方法，才能往后执行到下一个<code>yield</code>，但是<code>async</code>函数却不需要，它能够自动向后执行。</p>\n</blockquote>\n<p>(2) 更语义化</p>\n<blockquote>\n<p><code>async</code>和<code>await</code>，比起星号和<code>yield</code>，语义更清楚了。<code>async</code>表示函数里有异步操作，<code>await</code>表示紧跟在后面的表达式需要等待结果。</p>\n</blockquote>\n<p>(3) 更广的适用性</p>\n<blockquote>\n<p><code>yield</code>命令后面只能跟随<code>Trunk</code>或<code>Promise</code>，但是<code>await</code>后面除了可以是<code>Promise</code>，也可以是普通类型，但是这样就和同步没有任何区别了。</p>\n</blockquote>\n<p>(4) 返回值不同</p>\n<blockquote>\n<p><code>generator</code>返回的是一个遍历器对象，而<code>async</code>返回的是一个<code>Promise</code>对象</p>\n</blockquote>\n<h2 id=\"async怎么用？\"><a href=\"#async怎么用？\" class=\"headerlink\" title=\"async怎么用？\"></a>async怎么用？</h2><p>await 命令</p>\n<p>await语句后面的 Promise 变为reject，那么整个async函数都会中断执行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"string\">'出错了'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"string\">'hello world'</span>); <span class=\"comment\">// 不会执行</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>要知道的是async返回的是一个<code>Promise</code>对象，后面可以使用<code>then</code>方法添加回调</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getStockPriceByName</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> symbol = <span class=\"keyword\">await</span> getStockSymbol(name);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> stockPrice = <span class=\"keyword\">await</span> getStockPrice(symbol);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> stockPrice;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getStockPriceByName(<span class=\"string\">'goog'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(result);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>也可以使用<code>catch</code>方法捕捉错误信息,然而使用时需要注意<code>catch</code>的一些使用方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"string\">'出错了'</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"string\">'hello world'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">f()</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> <span class=\"built_in\">console</span>.log(v))</span><br><span class=\"line\"><span class=\"comment\">// 如果不想因为第一个异步失败，而中断后面的异步操作</span></span><br><span class=\"line\"><span class=\"comment\">// hello world</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"string\">'出错了'</span>)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> <span class=\"built_in\">console</span>.log(e));</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"string\">'hello world'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">f()</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> <span class=\"built_in\">console</span>.log(v))</span><br><span class=\"line\"><span class=\"comment\">// 原因同上</span></span><br><span class=\"line\"><span class=\"comment\">// 出错了</span></span><br><span class=\"line\"><span class=\"comment\">// hello world</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"项目中的案例\"><a href=\"#项目中的案例\" class=\"headerlink\" title=\"项目中的案例\"></a>项目中的案例</h2><p>案例背景：复合报表（项目功能之一）<br>复合报表是由用户来进行配置高自由度的展现报表，用户可以配置模块(组件)之间的查询条件以及共有参数、私有参数，来展示一个多功能查询，展示数据工具。<br>（因涉及公司产品产权问题不进行细节介绍）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  checkAllReady() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$watch(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">this</span>.allReady &amp;&amp; <span class=\"keyword\">this</span>.publicAllReady,</span><br><span class=\"line\">        val =&gt; &#123;</span><br><span class=\"line\">          val ? resolve(val) : reject(val);</span><br><span class=\"line\">        &#125;, &#123;<span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>&#125;);</span><br><span class=\"line\">    &#125;).then(<span class=\"function\"><span class=\"params\">val</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> p.resolve(val);</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'组件的参数还没准备好'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">async</span> getData() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.checkAllReady();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> url = <span class=\"keyword\">this</span>.parseApi(<span class=\"keyword\">this</span>.option.api);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> publicParams = <span class=\"keyword\">this</span>.blocks.getParams();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> id = <span class=\"keyword\">this</span>.option.f_id;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.loading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.showChart = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    api.get(url, $.extend(&#123;id&#125;,publicParams,<span class=\"keyword\">this</span>.getParams())).then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (data.code) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$message.error(data.msg);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'remote-data-completed'</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (data.data.is_sync_query_mode) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.renderChart(data.data);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'remote-data-completed'</span>,data);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> taskId = data.data.id;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.getStatus(taskId);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":[],"tags":["ES6"]},{"title":"Hello World","url":"http://weileilei.top/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"关于","url":"http://weileilei.top/about/index.html","content":"","categories":[],"tags":[]},{"title":"分类","url":"http://weileilei.top/category/index.html","content":"","categories":[],"tags":[]},{"title":"标签","url":"http://weileilei.top/tag/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://weileilei.top/css/page-home.css","content":"html.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/homepage2.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\nhtml.page-archives {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/blogpage2.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-attachment:fixed\n}\nhtml.page-tag,html.page-category,html.page-about {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/blogpage2.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-attachment:fixed\n}\n\n.article-type-post {\n  box-shadow: 5px 5px 20px #ccc;\n  border-radius: 5px;\n  padding: 20px;\n}","categories":[],"tags":[]},{"title":"搜索","url":"http://weileilei.top/search/index.html","content":"","categories":[],"tags":[]}]