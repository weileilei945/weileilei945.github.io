[{"title":"面试中一些模糊的问题","url":"http://yoursite.com/面试中一些模糊的问题/","content":"<p>今天去手百部门进行了一些面试，有些东西好久不用真的会慢慢的生疏，我把面试中遇到的一些问题我回答上的还有没有回答上的都列出来（需要写代码的部门必须要完全手写出来），让自己铭记有些东西不复习一下再简单也会忘的。</p>\n<h2 id=\"CSS有几种盒模型？\"><a href=\"#CSS有几种盒模型？\" class=\"headerlink\" title=\"CSS有几种盒模型？\"></a><code>CSS</code>有几种盒模型？</h2><p>盒模型一共有两种模式，一种是标准模式，另一种就是怪异模式。</p>\n<p>我们都知道当你建立html的时候都会生成一个<code>DOCTYPE</code>标签，而且知道<code>DOCTYPE</code>标签表示的是标准文档类型<br>比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/html4/loose.dtd\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">\"-//W3C//DTD HTML 4.01//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/html4/strict.dtd\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html PUBLIC <span class=\"string\">\"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html PUBLIC <span class=\"string\">\"-//W3C//DTD XHTML 1.0 Strict//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html PUBLIC <span class=\"string\">\"-//W3C//DTD XHTML 1.1//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\"</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>然而如果我们没有声明<code>DOCTYPE</code>的话，在IE6、IE7、IE8就会触发<code>怪异模式</code>。<br>在标准模式下的盒模型就是我们平常认知的盒模型。但是在怪异模式下，盒子的总宽度是包含内边距padding和边框border的。如果不好认知的话，我们可以用css3的<code>box-sizing</code>来举例。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">box-sizing</span>: <span class=\"selector-tag\">content-box</span></span><br><span class=\"line\">// 这是标准模式计算的</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">box-sizing</span>: <span class=\"selector-tag\">border-box</span></span><br><span class=\"line\">// 这是怪异模式计算的</span><br></pre></td></tr></table></figure>\n<h2 id=\"前端如何解决跨域问题？有几种做法\"><a href=\"#前端如何解决跨域问题？有几种做法\" class=\"headerlink\" title=\"前端如何解决跨域问题？有几种做法\"></a>前端如何解决跨域问题？有几种做法</h2><h3 id=\"为什么要用跨域？\"><a href=\"#为什么要用跨域？\" class=\"headerlink\" title=\"为什么要用跨域？\"></a>为什么要用跨域？</h3><p>了解了同源策略（同域名、同协议、同端口）的话就知道为什么要跨域了。<br>要知道<code>&lt;img&gt;</code>的src、<code>&lt;link&gt;</code>的href、<code>&lt;script&gt;</code>的src这三个都不遵循同源策略，所以可以用他们来考虑跨域，jsonp就是使用的<code>&lt;script&gt;</code>标签实现的</p>\n<h2 id=\"vue的双向绑定原理？view到model，model到view是如何变化的？\"><a href=\"#vue的双向绑定原理？view到model，model到view是如何变化的？\" class=\"headerlink\" title=\"vue的双向绑定原理？view到model，model到view是如何变化的？\"></a><code>vue</code>的双向绑定原理？<code>view</code>到<code>model</code>，<code>model</code>到<code>view</code>是如何变化的？</h2><h2 id=\"jQuery的源码？对源码的理解与运行机制？\"><a href=\"#jQuery的源码？对源码的理解与运行机制？\" class=\"headerlink\" title=\"jQuery的源码？对源码的理解与运行机制？\"></a><code>jQuery</code>的源码？对源码的理解与运行机制？</h2><h2 id=\"手机上最常见的开关按钮排版及样式\"><a href=\"#手机上最常见的开关按钮排版及样式\" class=\"headerlink\" title=\"手机上最常见的开关按钮排版及样式\"></a>手机上最常见的开关按钮排版及样式</h2><h2 id=\"vue的父子传参以及vuex的使用？项目中最常用的方法\"><a href=\"#vue的父子传参以及vuex的使用？项目中最常用的方法\" class=\"headerlink\" title=\"vue的父子传参以及vuex的使用？项目中最常用的方法\"></a><code>vue</code>的父子传参以及<code>vuex</code>的使用？项目中最常用的方法</h2><h2 id=\"ES6中async和promise的用法\"><a href=\"#ES6中async和promise的用法\" class=\"headerlink\" title=\"ES6中async和promise的用法\"></a><code>ES6</code>中<code>async</code>和<code>promise</code>的用法</h2><h2 id=\"闭包的优点与缺点，写出事例：给每个li便签加点击事件，点击后输出对应的index？\"><a href=\"#闭包的优点与缺点，写出事例：给每个li便签加点击事件，点击后输出对应的index？\" class=\"headerlink\" title=\"闭包的优点与缺点，写出事例：给每个li便签加点击事件，点击后输出对应的index？\"></a>闭包的优点与缺点，写出事例：给每个li便签加点击事件，点击后输出对应的<code>index</code>？</h2><h2 id=\"模块化思想？seaJs与requireJs的一些区别\"><a href=\"#模块化思想？seaJs与requireJs的一些区别\" class=\"headerlink\" title=\"模块化思想？seaJs与requireJs的一些区别\"></a>模块化思想？<code>seaJs</code>与<code>requireJs</code>的一些区别</h2><h2 id=\"写一个person-39-li-39-39-lei-39-的类要求：\"><a href=\"#写一个person-39-li-39-39-lei-39-的类要求：\" class=\"headerlink\" title=\"写一个person(&#39;li&#39;,&#39;lei&#39;)的类要求：\"></a>写一个<code>person(&#39;li&#39;,&#39;lei&#39;)</code>的类要求：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);</span><br><span class=\"line\"><span class=\"comment\">// 输出 ‘li lei’</span></span><br><span class=\"line\"></span><br><span class=\"line\">person.name = <span class=\"string\">'li hua'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 改变person的名字</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.firstName);</span><br><span class=\"line\"><span class=\"comment\">// 'li'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.lastName);</span><br><span class=\"line\"><span class=\"comment\">// 'hua'</span></span><br></pre></td></tr></table></figure>","categories":[],"tags":["web"]},{"title":"ES6中async的使用","url":"http://yoursite.com/ES6中aysnc-await的使用/","content":"<p>在项目中有时会遇到异步操作的问题，async就是解决异步操作的终极操作。我会以终极三问（what，why，when）的形式来说明什么是async。由于这是第一篇文章不知道怎么写，有很大部分是借鉴阮一峰老的原文，事例将会从我的项目中摘取。</p>\n<h2 id=\"async是什么？\"><a href=\"#async是什么？\" class=\"headerlink\" title=\"async是什么？\"></a>async是什么？</h2><h3 id=\"官方例子\"><a href=\"#官方例子\" class=\"headerlink\" title=\"官方例子\"></a>官方例子</h3><p><a href=\"http://es6.ruanyifeng.com/#docs/async\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>async相当于对Generator 函数的一个语法糖</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> readFile = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">fileName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">    fs.readFile(fileName, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error, data</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (error) <span class=\"keyword\">return</span> reject(error);</span><br><span class=\"line\">      resolve(data);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> gen = <span class=\"function\"><span class=\"keyword\">function</span>* (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> f1 = <span class=\"keyword\">yield</span> readFile(<span class=\"string\">'/etc/fstab'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> f2 = <span class=\"keyword\">yield</span> readFile(<span class=\"string\">'/etc/shells'</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f1.toString());</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f2.toString());</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>用async函数就换成了 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> asyncReadFile = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> f1 = <span class=\"keyword\">await</span> readFile(<span class=\"string\">'/etc/fstab'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> f2 = <span class=\"keyword\">await</span> readFile(<span class=\"string\">'/etc/shells'</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f1.toString());</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f2.toString());</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>那async与Genetator有什么区别呢？我自己的理解就是，更简单，更语义化，而且会自动执行。</p>\n<p>(1)自动执行</p>\n<blockquote>\n<p>我们知道 <code>generator</code> 函数需要通过调用<code>next()</code>方法，才能往后执行到下一个<code>yield</code>，但是<code>async</code>函数却不需要，它能够自动向后执行。</p>\n</blockquote>\n<p>(2) 更语义化</p>\n<blockquote>\n<p><code>async</code>和<code>await</code>，比起星号和<code>yield</code>，语义更清楚了。<code>async</code>表示函数里有异步操作，<code>await</code>表示紧跟在后面的表达式需要等待结果。</p>\n</blockquote>\n<p>(3) 更广的适用性</p>\n<blockquote>\n<p><code>yield</code>命令后面只能跟随<code>Trunk</code>或<code>Promise</code>，但是<code>await</code>后面除了可以是<code>Promise</code>，也可以是普通类型，但是这样就和同步没有任何区别了。</p>\n</blockquote>\n<p>(4) 返回值不同</p>\n<blockquote>\n<p><code>generator</code>返回的是一个遍历器对象，而<code>async</code>返回的是一个<code>Promise</code>对象</p>\n</blockquote>\n<h2 id=\"async怎么用？\"><a href=\"#async怎么用？\" class=\"headerlink\" title=\"async怎么用？\"></a>async怎么用？</h2><p>await 命令</p>\n<p>await语句后面的 Promise 变为reject，那么整个async函数都会中断执行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"string\">'出错了'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"string\">'hello world'</span>); <span class=\"comment\">// 不会执行</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>要知道的是async返回的是一个<code>Promise</code>对象，后面可以使用<code>then</code>方法添加回调</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getStockPriceByName</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> symbol = <span class=\"keyword\">await</span> getStockSymbol(name);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> stockPrice = <span class=\"keyword\">await</span> getStockPrice(symbol);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> stockPrice;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getStockPriceByName(<span class=\"string\">'goog'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(result);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>也可以使用<code>catch</code>方法捕捉错误信息,然而使用时需要注意<code>catch</code>的一些使用方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"string\">'出错了'</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"string\">'hello world'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">f()</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> <span class=\"built_in\">console</span>.log(v))</span><br><span class=\"line\"><span class=\"comment\">// 如果不想因为第一个异步失败，而中断后面的异步操作</span></span><br><span class=\"line\"><span class=\"comment\">// hello world</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"string\">'出错了'</span>)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> <span class=\"built_in\">console</span>.log(e));</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"string\">'hello world'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">f()</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> <span class=\"built_in\">console</span>.log(v))</span><br><span class=\"line\"><span class=\"comment\">// 原因同上</span></span><br><span class=\"line\"><span class=\"comment\">// 出错了</span></span><br><span class=\"line\"><span class=\"comment\">// hello world</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"项目中的案例\"><a href=\"#项目中的案例\" class=\"headerlink\" title=\"项目中的案例\"></a>项目中的案例</h2><p>案例背景：复合报表（项目功能之一）<br>复合报表是由用户来进行配置高自由度的展现报表，用户可以配置模块(组件)之间的查询条件以及共有参数、私有参数，来展示一个多功能查询，展示数据工具。<br>（因涉及公司产品产权问题不进行细节介绍）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  checkAllReady() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$watch(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">this</span>.allReady &amp;&amp; <span class=\"keyword\">this</span>.publicAllReady,</span><br><span class=\"line\">        val =&gt; &#123;</span><br><span class=\"line\">          val ? resolve(val) : reject(val);</span><br><span class=\"line\">        &#125;, &#123;<span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>&#125;);</span><br><span class=\"line\">    &#125;).then(<span class=\"function\"><span class=\"params\">val</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> p.resolve(val);</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'组件的参数还没准备好'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">async</span> getData() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.checkAllReady();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> url = <span class=\"keyword\">this</span>.parseApi(<span class=\"keyword\">this</span>.option.api);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> publicParams = <span class=\"keyword\">this</span>.blocks.getParams();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> id = <span class=\"keyword\">this</span>.option.f_id;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.loading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.showChart = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    api.get(url, $.extend(&#123;id&#125;,publicParams,<span class=\"keyword\">this</span>.getParams())).then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (data.code) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$message.error(data.msg);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'remote-data-completed'</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (data.data.is_sync_query_mode) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.renderChart(data.data);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'remote-data-completed'</span>,data);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> taskId = data.data.id;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.getStatus(taskId);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":[],"tags":["ES6"]},{"title":"Hello World","url":"http://yoursite.com/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"关于","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"分类","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://yoursite.com/css/page-home.css","content":"html.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/homepage2.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\nhtml.page-archives {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/blogpage2.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n}","categories":[],"tags":[]},{"title":"搜索","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"标签","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]}]